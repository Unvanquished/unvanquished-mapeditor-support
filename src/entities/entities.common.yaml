chain_autonom:
  props:
    targetname: Can possibly be fired.
chain_active:
  props:
    target: >
      [required] Must have entity to fire at.
chain_passive:
  props:
    targetname: >
      [required] Must be someone's target for firing.
chain_relay:
  props:
    target: >
      [required] Must have entity to fire at.
    targetname: >
      [required] Must be someone's target for firing.
chain_target:
  props:
    targetname: >
      [required] Must be someone's target for aiming.
brush:
  color: 007fcc
  props:
    _celshader: >
      [q3map] Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.
      Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html
    _cs: >
      [q3map] or "_castShadows". Group number entity cast shadow to.
      Negative value uses same group but disables world.
      0 disables shadow casting.
    _rs: >
      [q3map] or "_receiveShadows". Group number entity receive shadow from.
      Negative value uses same group but disables world.
      0 disables shadow receiving.
    _lightmapscale: >
      [q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution.
  proptypes:
    _celshader: string
    _cs: int
    _rs: int
    _lightmapscale: float
  propdefaults:
    _lightmapscale: 1
  propeg:
    _celshader: mymap/ink
  desc:
    For "_celshader" read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html
indexmap:
  props:
    _indexmap: >
      [terrain] Path to index-colour image representing placement of different textures.
    _layers: >
      [terrain] Count of terrain textures. Should be equal to count of colours in indexmap palette.
    _shader: >
      [terrain] Name of metashader. Template for indexed shader names. Note: omit the "textures/" prefix.
    _offsets: >
      [terrain] Height offset for each layer.
  proptypes:
    _indexmap: string
    _layers: int
    _shader: string
    _offsets: float_array
  propeg:
    _indexmap: maps/indexmap.pcx
    _layers: 3
    _shader: mymap/terrain
  desc: >
    For [terrain] read http://icculus.org/gtkradiant/documentation/Terrain_Manual/start.html
    [terrain] is done entirely by [q3map]. Don't forget to set q3map_indexmap in shader.
indexmap2:
  desc: >
    Entity supports [terrain] properties. They're not so useful here, but you can refer to func_group for
    descriptions.
point:
  size_min: [-8.0, -8.0, -8.0]
  size_max: [8.0, 8.0, 8.0]
  props:
    origin: Position.
clight: # SP_ConstantLightField
  props:
    color: Colour of emitted light.
      Emission activated by either color or light set. Don't forget to set origin.
    # bug: reads floats locale-aware or using , instead .
    light: Light emitting intensity.
      Emission activated by either color or light set. Don't forget to set origin.
    origin: Entity position point.
  proptypes:
    light: float
    color: vec3_float (color)
  propdefaults:
    light: 100
    color: [1, 1, 1]
mover: # InitMover, InitRotator
  extend: [clight]
  props:
    model2: Path to custom model attached to entity. Don't forget to set "origin".
    group: Name of entity group. Allows to activate all entities of group at once.
    origin: >
      "model2" position.
