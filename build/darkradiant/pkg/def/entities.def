/* THIS FILE IS AUTOGENERATED, DO NOT MODIFY

Unvanquished entity definitions file for level editor

License:
  Copyright (c) 2014, Daemon Developers
  All rights reserved.
  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:
   * Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.
   * Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.
   * Neither the name of the Daemon developers nor the
     names of its contributors may be used to endorse or promote products
     derived from this software without specific prior written permission.
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  DISCLAIMED. IN NO EVENT SHALL DAEMON DEVELOPERS BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS

Contributors:
  2014 neumond, Viech

Greetings:
  We thank these authors for contributing to Tremulous' entity definition file
  that was used as documentation when creating this one:
  1999 inolen, Suicide 20
  ???? Eutectic, raYGunn, ydnar
  2003 Tim Angus
  2007 Warrior
  2009 Ingar

Bugs & Feedback:
  The issue tracker for this file can be found at GitHub:
    https://github.com/Unvanquished/unvanquished-mapeditor-support/issues

  If you don't have a GitHub account, you can try to contact the recent
  contributors via the Unvanquished forums:
    https://forums.unvanquished.net
  or via the developers' IRC channel:
    irc.freenode.net, #unvanquished-dev
  or via the discord channel:
    https://discord.gg/pHwf5K2
*/

entityDef worldspawn
{
	// Class
	"spawnclass" "idWorldspawn"

	// Description
	"editor_usage" "Only used for the world.\nEntity supports [terrain] properties. They're not so useful here, but you can refer to func_group for descriptions."

	// Editor color
	"editor_color" "000000"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var _q3map2_cmdline" ""
	"editor_var alienBuildPoints" "The maximum amount of sentience available to the overmind."
	"editor_var colorGrade" "or gradingTexture - Path of color grading effect (string, eg: gfx/cgrading/red-only)"
	"editor_var deluxeMapping" "bool"
	"editor_var disabledBuildables" "A comma delimited list of buildables to disable for this map. (eggpod,overmind,barricade,acid_tube,trapper,booster,hive,leech,telenode,mgturret, tesla,arm,medistat,drill,reactor,repeater) (string)"
	"editor_var disabledClasses" "A comma delimited list of alien classes to disable for this map. (builder,builderupg,level0,level1,level2,level2upg,level3,level3upg,level4) (string)"
	"editor_var disabledEquipment" "A comma delimited list of human weapons or upgrades to disable for this map. (rifle,psaw,shotgun,lgun,mdriver,chaingun,flamer,prifle,lcannon, larmour,marmour,bsuit,radar,battpack,jetpack,gren,firebomb) (string)"
	"editor_var enabledust" ""
	"editor_var fogColor" "RGB (vec3_float)"
	"editor_float fogDensity" " (float)"
	"editor_float gravity" "Gravity of level. (float, def: 800)"
	"editor_var hdrRGBE" "bool"
	"editor_var humanBuildPoints" "The maximum amount of power the humans can use."
	"editor_var humanRepeaterBuildPoints" "maximum amount of power the humans can use around each repeater"
	"editor_var mapOverBrightBits" ""
	"editor_var message" "Shown above loading bar. (string)"
	"editor_var music" "Path/name of looping .wav or .ogg file used for level's music. (string, eg: music/sonic5.wav)"
	"editor_var remapshader*" "Remap shaders. Any property name starting with \"remapshader\" counts. Values are ; separated. (string, eg: textures/newmap/ter_rock;textures/newmap/ter_sand)"
	"editor_var reverbEffect" "Effect name. Use /testReverb <TAB> to view the list of possible values."
	"editor_float reverbIntensity" "Intensity of reverberation. (float, 0..2)"
	"editor_float _ambient" "[q3map] Adds a constant value to overall lighting. Use is not recommended. Ambient light will have a tendency to flatten out variations in light and shade. (float, eg: 30)"
	"editor_var _blocksize" "[q3map] q3map always splits the BSP tree along the planes. Increase the blocksize using larger powers of 2 to reduce compile times on very large maps with a low structural brush density. (vec3_int, def: 1024 1024 1024)"
	"editor_var _color" "[q3map] color value for \"_ambient\", \"_minvertexlight\", \"_mingridlight\". (vec3_float, def: 1 1 1)"
	"editor_var _farplanedist" "[q3map] Limit on how many units the vis phase of compilation can see. Used in combination with level-wide fog, it can help reduce r_speeds on large, open maps. Use with \"_foghull\"."
	"editor_var _foghull" "[q3map] Shader to use for \"fog hull.\" Foghull shader should be a sky shader. Omit the \"textures/\" prefix. Use with \"_farplanedist\"."
	"editor_bool _keepLights" "[q3map] Keep light entities in the BSP. Normally stripped out by the BSP process and read from the .map file by the lighting phase. (int, 0 or 1, def: 0)"
	"editor_float _mingridlight" "[q3map] \"_ambient\" for lightgrid (entity and weapon lighting). (float, eg: 30)"
	"editor_float _minlight" "[q3map] Shorthand for setting both \"_minvertexlight\" and \"_mingridlight\". (float, eg: 30)"
	"editor_float _minvertexlight" "[q3map] \"_ambient\" for vertex lighting. (float, eg: 30)"
	"editor_bool _noshadersun" "[q3map] Ignore q3map_sun*|sun directives in sky shaders and ONLY use entity sun lights. (int, 0 or 1, def: 0)"
	"editor_var _style*alphagen" "[q3map] Used for lights with \"style\" set. Star is replaced by numbers."
	"editor_var _style*rgbgen" "[q3map] Used for lights with \"style\" set. Star is replaced by numbers."
	"editor_var gridsize" "[q3map] Granularity of the lightgrid created by q3map. Values for every axis. Minimum value is 8. (vec3_float, eg: 64 64 128)"

	// Property default value
	"_q3map2_cmdline" ""
	"alienBuildPoints" ""
	"colorGrade" ""
	"deluxeMapping" ""
	"disabledBuildables" ""
	"disabledClasses" ""
	"disabledEquipment" ""
	"enabledust" ""
	"fogColor" ""
	"fogDensity" ""
	"gravity" "800"
	"hdrRGBE" ""
	"humanBuildPoints" ""
	"humanRepeaterBuildPoints" ""
	"mapOverBrightBits" ""
	"message" ""
	"music" ""
	"remapshader*" ""
	"reverbEffect" ""
	"reverbIntensity" ""
	"_ambient" ""
	"_blocksize" "1024 1024 1024"
	"_color" "1 1 1"
	"_farplanedist" ""
	"_foghull" ""
	"_mingridlight" ""
	"_minlight" ""
	"_minvertexlight" ""
	"_style*alphagen" ""
	"_style*rgbgen" ""
	"gridsize" ""
}

entityDef light
{
	// Class
	"spawnclass" "idLight"

	// Description
	"editor_usage" "Non-displayed point light source.\nThe -pointscale and -scale arguments to Q3Map2 affect the brightness of these lights. The -skyscale argument affects brightness of entity sun lights.\nProperties for dynamic realtime lights marked as [dynamic]. Any property marked as [projected] if set makes dynamic light projected. Projected light requires most of its properties set, such as \"light_target\", \"light_up\", \"light_right\"."

	// Editor color
	"editor_color" "a6a6ff"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var _color" "Weighted RGB value of light color. (vec3_float, def: 1 1 1)"
	"editor_float light" "Intensity. (float, def: 300)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var targetname" "Setting name implies dynamic light style set. (string)"
	"editor_var light_radius" "[dynamic] Same as \"light\", but allows to use different radius per axis. Dynamic lights treat \"light\" as radius. (vec3_float)"
	"editor_float light_scale" "[dynamic] Intensity multiplicator. Can't be bigger than r_lightScale cvar. (float)"
	"editor_bool noradiosity" "[dynamic] Disable radiosity (lightmap) lighting. Setting this property makes the light dynamic. This enables realtime shadows. (int, 0 or 1, def: 0)"
	"editor_bool noshadows" "[dynamic] Disable casting shadows. (int, 0 or 1, def: 0)"
	"editor_var rotation" "[dynamic] 3x3 rotation matrix for frustum box. (vec9_float)"
	"editor_var texture" "[dynamic] Lighting texture."
	"editor_bool parallel" "[dynamic,parallel] Make light parallel, similar to using orthogonal projection instead of usual frustum. (int, 0 or 1, def: 0)"
	"editor_var light_end" "[dynamic,projected] Point where light must end. By default it is \"light_target\". (vec3_float)"
	"editor_var light_right" "[dynamic,projected] Right vector. Length of vector defines the size of far frustum pyramid edge. (vec3_float)"
	"editor_var light_start" "[dynamic,projected] Point where light must start. (vec3_float, def: 0 0 0)"
	"editor_var light_target" "[dynamic,projected] Direction vector. Length of vector defines frustum pyramid height. (vec3_float)"
	"editor_var light_up" "[dynamic,projected] Up vector. Length of vector defines the size of far frustum pyramid edge. (vec3_float)"
	"editor_var _anglescale" "[q3map] Angle attenuation coefficient for spotlights (those having target)."
	"editor_float _deviance" "[q3map] Used in pair with _samples. Jitter radius for array of lights. (float, def: 0)"
	"editor_float _filterradius" "[q3map] No attenuation within _filterradius sphere. (float, def: 0)"
	"editor_var _samples" "[q3map] Used for light jitter in pair with _deviance. Number of lights created near each other instead of the sole light source. Sum of all intensities equals to original light intensity. (int, def: 1)"
	"editor_bool _sun" "[q3map] Set this key on a spotlight (those having \"target\") to make an infinite sun light. This can be used instead of q3map_skylight shader directive. Properties remaining useful are \"target\", \"_color\", \"_deviance\", \"_samples\", \"style\". (int, 0 or 1, def: 0)"
	"editor_float fade" "[q3map] Linear (only linear) light attenuation coefficient, less value - far the light goes. (float, def: 1)"
	"editor_float radius" "[q3map] Overrides the default 64 unit Radius of a spotlight at the target point. (float, def: 64)"
	"editor_float scale" "[q3map] Scales intensity, from SOF2/JK2. Eg. light=300, scale=0.2 will result in light=60 (float, def: 1)"
	"editor_var style" "[q3map] Used for blinking lights. Number used to choose proper worldspawn entity keys with formulas. Key names are _style*rgbgen and _style*alphagen where * is replaced by style number. Read more here http://q3map2.robotrenegade.com/docs/shader_manual/lightstyles.html (int, def: 0)"
	"editor_var target" "[q3map] Lights pointed at a target will be spotlights. (string (target))"

	// Property default value
	"_color" "1 1 1"
	"light" "300"
	"origin" ""
	"targetname" ""
	"light_radius" ""
	"light_scale" ""
	"rotation" ""
	"texture" ""
	"light_end" ""
	"light_right" ""
	"light_start" "0 0 0"
	"light_target" ""
	"light_up" ""
	"_anglescale" ""
	"_deviance" "0"
	"_filterradius" "0"
	"_samples" "1"
	"fade" "1"
	"radius" "64"
	"scale" "1"
	"style" "0"
	"target" ""
}

entityDef lightJunior
{
	// Class
	"spawnclass" "idLight"

	// Description
	"editor_usage" "Non-displayed point light source. Unlike usual light affects only entities (lightgrid).\nThe -pointscale and -scale arguments to Q3Map2 affect the brightness of these lights. The -skyscale argument affects brightness of entity sun lights."

	// Editor color
	"editor_color" "00b34c"

	// Editor sizes
	"editor_mins" "-6 -6 -6"
	"editor_maxs" "6 6 6"

	// Property description
	"editor_var _color" "Weighted RGB value of light color. (vec3_float, def: 1 1 1)"
	"editor_float light" "Intensity. (float, def: 300)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_float radius" "Overrides the default 64 unit Radius of a spotlight at the target point. (float, def: 64)"
	"editor_var _anglescale" "[q3map] Angle attenuation coefficient for spotlights (those having target)."
	"editor_float _deviance" "[q3map] Used in pair with _samples. Jitter radius for array of lights. (float, def: 0)"
	"editor_float _filterradius" "[q3map] No attenuation within _filterradius sphere. (float, def: 0)"
	"editor_var _samples" "[q3map] Used for light jitter in pair with _deviance. Number of lights created near each other instead of the sole light source. Sum of all intensities equals to original light intensity. (int, def: 1)"
	"editor_float fade" "[q3map] Linear (only linear) light attenuation coefficient, less value - far the light goes. (float, def: 1)"
	"editor_float scale" "[q3map] Scales intensity, from SOF2/JK2. Eg. light=300, scale=0.2 will result in light=60 (float, def: 1)"
	"editor_var target" "[q3map] Lights pointed at a target will be spotlights. (string (target))"

	// Property default value
	"_color" "1 1 1"
	"light" "300"
	"origin" ""
	"radius" "64"
	"_anglescale" ""
	"_deviance" "0"
	"_filterradius" "0"
	"_samples" "1"
	"fade" "1"
	"scale" "1"
	"target" ""
}

entityDef func_bobbing
{
	// Description
	"editor_usage" "Solid entity that oscillates back and forth in a linear motion. Entity bobs on the Z axis (up-down) by default.\nFor \"_celshader\" read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html\nEntity supports [terrain] properties. They're not so useful here, but you can refer to func_group for descriptions."

	// Editor color
	"editor_color" "007fcc"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var color" "Colour of emitted light. Emission activated by either color or light set. Don't forget to set origin. (vec3_float, def: 1 1 1)"
	"editor_var dmg" "Damage dealt when blocked. (int, def: 2)"
	"editor_var group" "Name of entity group. Allows to activate all entities of group at once."
	"editor_float height" "Amount of travel of the oscillation movement. (float, def: 32)"
	"editor_float light" "Light emitting intensity. Emission activated by either color or light set. Don't forget to set origin. (float, def: 100)"
	"editor_var model2" "Path to custom model attached to entity. Don't forget to set \"origin\". (string)"
	"editor_var noise" "Sound played when activated via targetname. Emitted at origin. (string (sound))"
	"editor_var origin" "\"model2\" position. (vec3_float)"
	"editor_float phase" "Sets the start offset of the oscillation cycle. (float, 0..1, def: 0)"
	"editor_float speed" "Amount of time in seconds for one complete oscillation cycle. (float, def: 4)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"
	"editor_var _celshader" "[q3map] Sets the cel shader used for this geometry. Note: omit the \"textures/\" prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)"
	"editor_var _cs" "[q3map] or \"_castShadows\". Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)"
	"editor_float _lightmapscale" "[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)"
	"editor_var _rs" "[q3map] or \"_receiveShadows\". Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)"

	// Property default value
	"color" "1 1 1"
	"dmg" "2"
	"group" ""
	"height" "32"
	"light" "100"
	"model2" ""
	"noise" ""
	"origin" ""
	"phase" "0"
	"speed" "4"
	"targetname" ""
	"_celshader" ""
	"_cs" ""
	"_lightmapscale" "1"
	"_rs" ""
}

entityDef func_button
{
	// Description
	"editor_usage" "When a button is touched by a player, it moves in the direction set by the \"angle\" key, triggers all its targets, stays pressed by an amount of time set by the \"wait\" key, then returns to it's original position where it can be operated again.\nFor \"_celshader\" read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html\nEntity supports [terrain] properties. They're not so useful here, but you can refer to func_group for descriptions."

	// Editor color
	"editor_color" "007fcc"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var target" "[required] Must have entity to fire at. (string (target))"
	"editor_var angle" "Determines moving direction of button (around Z axis: 0=+x, 90=+y, 180=-x, 270=-y; special values: up = -1, down = -2). (float (yaw), -2..360)"
	"editor_var color" "Colour of emitted light. Emission activated by either color or light set. Don't forget to set origin. (vec3_float, def: 1 1 1)"
	"editor_var group" "Name of entity group. Allows to activate all entities of group at once."
	"editor_bool health" "If set, the button must take damage (any amount) to activate. (int, 0 or 1, def: 0)"
	"editor_float light" "Light emitting intensity. Emission activated by either color or light set. Don't forget to set origin. (float, def: 100)"
	"editor_float lip" "When 0, button displacement = button's size in direction of movement. Positive lip value discreases displacement, leaving lip remaining at the end of move. (float, def: 4)"
	"editor_var model2" "Path to custom model attached to entity. Don't forget to set \"origin\". (string)"
	"editor_var origin" "\"model2\" position. (vec3_float)"
	"editor_var sound1to2" "Activation sound. (string (sound), eg: sound/dum.ogg, def: sound/movers/switches/button1.wav)"
	"editor_float speed" "Determines how fast the button moves. (float)"
	"editor_var wait" "Number of seconds button stays pressed. -1 = return immediately. (time_2float (time [variance]))"
	"editor_var _celshader" "[q3map] Sets the cel shader used for this geometry. Note: omit the \"textures/\" prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)"
	"editor_var _cs" "[q3map] or \"_castShadows\". Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)"
	"editor_float _lightmapscale" "[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)"
	"editor_var _rs" "[q3map] or \"_receiveShadows\". Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)"

	// Property default value
	"target" ""
	"angle" ""
	"color" "1 1 1"
	"group" ""
	"light" "100"
	"lip" "4"
	"model2" ""
	"origin" ""
	"sound1to2" "sound/movers/switches/button1.wav"
	"speed" ""
	"wait" ""
	"_celshader" ""
	"_cs" ""
	"_lightmapscale" "1"
	"_rs" ""
}

entityDef func_destructable
{
	// Description
	"editor_usage" "Destructable object. You can destroy this object in game. When destructed deals splash damage to everyone near it. Does not cause splash damage to builables.\nFor \"_celshader\" read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html\nEntity supports [terrain] properties. They're not so useful here, but you can refer to func_group for descriptions."

	// Editor color
	"editor_color" "007fcc"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var damage" "Splash damage caused when destroyed. (int, def: 0)"
	"editor_var health" "Amount of damage needed to destroy this. (int, def: 100)"
	"editor_var onDie" "Name of the target fired when destroyed. (string (target))"
	"editor_var radius" "Splash damage radius. (int, def: 0)"
	"editor_var targetname" "Can be toggled as target. Causes object to appear or disappear. Even after being destructed object can appear again. (string)"
	"editor_var _celshader" "[q3map] Sets the cel shader used for this geometry. Note: omit the \"textures/\" prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)"
	"editor_var _cs" "[q3map] or \"_castShadows\". Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)"
	"editor_float _lightmapscale" "[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)"
	"editor_var _rs" "[q3map] or \"_receiveShadows\". Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)"

	// Property default value
	"damage" "0"
	"health" "100"
	"onDie" ""
	"radius" "0"
	"targetname" ""
	"_celshader" ""
	"_cs" ""
	"_lightmapscale" "1"
	"_rs" ""
}

entityDef func_door
{
	// Description
	"editor_usage" "Normal sliding door entity. By default, the door will activate when player walks close (\"range\") to it or when damage is inflicted (\"health\") to it.\nFor \"_celshader\" read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html\nEntity supports [terrain] properties. They're not so useful here, but you can refer to func_group for descriptions."

	// Editor color
	"editor_color" "007fcc"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var angle" "Determines moving direction of door (around Z axis: 0=+x, 90=+y, 180=-x, 270=-y; special values: up = -1, down = -2). (float (yaw))"
	"editor_var color" "Colour of emitted light. Emission activated by either color or light set. Don't forget to set origin. (vec3_float, def: 1 1 1)"
	"editor_var dmg" "Damage to inflict on player when he blocks operation of door. Door will reverse direction when blocked unless CRUSHER spawnflag is set. (int, def: 2)"
	"editor_var group" "Name of entity group. Allows to activate all entities of group at once."
	"editor_bool health" "If set, the door must take damage (any amount) to activate. (int, 0 or 1, def: 0)"
	"editor_float light" "Light emitting intensity. Emission activated by either color or light set. Don't forget to set origin. (float, def: 100)"
	"editor_float lip" "When 0, door displacement = door's size in direction of movement. Positive lip value discreases displacement, leaving lip remaining at the end of move. (float, def: 8)"
	"editor_var model2" "Path to custom model attached to entity. Don't forget to set \"origin\". (string)"
	"editor_var origin" "\"model2\" position. (vec3_float)"
	"editor_var range" "Door triggering range. (int, def: 72)"
	"editor_var sound1to2" "The sound played on start moving from state 1 to state 2. (string (sound))"
	"editor_var sound2to1" "The sound played on start moving from state 2 to state 1. (string (sound))"
	"editor_var soundPos1" "The sound played reached state 1. (string (sound))"
	"editor_var soundPos2" "The sound played reached state 2. (string (sound))"
	"editor_float speed" "Determines how fast the door moves. (float, def: 400)"
	"editor_var targetname" "If set, a func_button or trigger is required to activate the door. Overrides activation by damage. (string)"
	"editor_var wait" "Number of seconds before brush returns. -1 = return immediately. (time_2float (time [variance]))"
	"editor_var _celshader" "[q3map] Sets the cel shader used for this geometry. Note: omit the \"textures/\" prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)"
	"editor_var _cs" "[q3map] or \"_castShadows\". Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)"
	"editor_float _lightmapscale" "[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)"
	"editor_var _rs" "[q3map] or \"_receiveShadows\". Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)"

	// Property default value
	"angle" ""
	"color" "1 1 1"
	"dmg" "2"
	"group" ""
	"light" "100"
	"lip" "8"
	"model2" ""
	"origin" ""
	"range" "72"
	"sound1to2" ""
	"sound2to1" ""
	"soundPos1" ""
	"soundPos2" ""
	"speed" "400"
	"targetname" ""
	"wait" ""
	"_celshader" ""
	"_cs" ""
	"_lightmapscale" "1"
	"_rs" ""
}

entityDef func_door_model
{
	// Description
	"editor_usage" "A model based door entity. By default, the door will activate when player walks close to it. The opening and closing of the door is provided by an animation in the model itself.\nEvery func_door_model needs its model to be positioned, scaled and orientated using the modelOrigin, scale and angle/angles keys repsectively."

	// Editor color
	"editor_color" "007fcc"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var model2" "[required] The door model. (string, eg: models/mapobjects/pipe/pipe02.md3)"
	"editor_var modelOrigin" "[required] \"model2\" position. (vec3_float, def: 0 0 0)"
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "Model orientation. (vec3_float (yaw pitch roll))"
	"editor_var animation" "The first frame and number of frames in the door open animation. This will be reversed for the close animation. (vec2_int, eg: [0, 10])"
	"editor_var color" "Colour of emitted light. Emission activated by either color or light set. Don't forget to set origin. (vec3_float, def: 1 1 1)"
	"editor_var health" "If set, the door must take damage (any amount) to activate. (int)"
	"editor_float light" "Light emitting intensity. Emission activated by either color or light set. Don't forget to set origin. (float, def: 100)"
	"editor_var noise" "The sound played repeatedly while door is moving. (string (sound))"
	"editor_var origin" "Entity position point. (vec3_float)"
	"editor_var range" "Door triggering range. (int, def: 72)"
	"editor_var scale" "Model scale factors for each axis. (vec3_float, def: 1 1 1)"
	"editor_var sound1to2" "The sound played on start moving from state 1 to state 2. (string (sound))"
	"editor_var sound2to1" "The sound played on start moving from state 2 to state 1. (string (sound))"
	"editor_var soundPos1" "The sound played reached state 1. (string (sound))"
	"editor_var soundPos2" "The sound played reached state 2. (string (sound))"
	"editor_float speed" "The time taken for the door to change state in msec. (float, def: 200)"
	"editor_var targetname" "If set, a func_button or trigger is required to activate the door. Overrides activation by damage. (string)"
	"editor_float wait" "Number of seconds before door returns. (float, def: 2)"

	// Property default value
	"model2" ""
	"modelOrigin" "0 0 0"
	"angle" ""
	"angles" ""
	"animation" ""
	"color" "1 1 1"
	"health" ""
	"light" "100"
	"noise" ""
	"origin" ""
	"range" "72"
	"scale" "1 1 1"
	"sound1to2" ""
	"sound2to1" ""
	"soundPos1" ""
	"soundPos2" ""
	"speed" "200"
	"targetname" ""
	"wait" "2"
}

entityDef func_door_rotating
{
	// Description
	"editor_usage" "Rotating door entity. By default, the door will activate when player walks close to it.\nRotating door will not cause damage to player when blocked.\nWhen activated turns around the rotation axis (\"origin\") to angle (\"rotatorAngle\") with \"speed\", then stops. After \"wait\" time door starts turning back.\nFor \"_celshader\" read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html\nEntity supports [terrain] properties. They're not so useful here, but you can refer to func_group for descriptions."

	// Editor color
	"editor_color" "007fcc"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var origin" "[required] Rotation axis position. (vec3_float)"
	"editor_var color" "Colour of emitted light. Emission activated by either color or light set. Don't forget to set origin. (vec3_float, def: 1 1 1)"
	"editor_var group" "Name of entity group. Allows to activate all entities of group at once."
	"editor_bool health" "If set, the door must take damage (any amount) to activate. (int, 0 or 1, def: 0)"
	"editor_float light" "Light emitting intensity. Emission activated by either color or light set. Don't forget to set origin. (float, def: 100)"
	"editor_var model2" "Path to custom model attached to entity. Don't forget to set \"origin\". (string)"
	"editor_var noise" "The sound played repeatedly while door is moving. (string (sound))"
	"editor_float rotatorAngle" "The number of degrees through which to rotate. (float, def: 90)"
	"editor_var sound1to2" "The sound played on start moving from state 1 to state 2. (string (sound))"
	"editor_var sound2to1" "The sound played on start moving from state 2 to state 1. (string (sound))"
	"editor_var soundPos1" "The sound played reached state 1. (string (sound))"
	"editor_var soundPos2" "The sound played reached state 2. (string (sound))"
	"editor_float speed" "Determines how fast the door moves, in degrees/second. (float)"
	"editor_var targetname" "If set, a func_button or trigger is required to activate the door. (string)"
	"editor_float wait" "Number of seconds before door returns. -1 = return immediately. (float, def: 2)"
	"editor_var _celshader" "[q3map] Sets the cel shader used for this geometry. Note: omit the \"textures/\" prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)"
	"editor_var _cs" "[q3map] or \"_castShadows\". Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)"
	"editor_float _lightmapscale" "[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)"
	"editor_var _rs" "[q3map] or \"_receiveShadows\". Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)"

	// Property default value
	"origin" ""
	"color" "1 1 1"
	"group" ""
	"light" "100"
	"model2" ""
	"noise" ""
	"rotatorAngle" "90"
	"sound1to2" ""
	"sound2to1" ""
	"soundPos1" ""
	"soundPos2" ""
	"speed" ""
	"targetname" ""
	"wait" "2"
	"_celshader" ""
	"_cs" ""
	"_lightmapscale" "1"
	"_rs" ""
}

entityDef func_dynamic
{
	// Description
	"editor_usage" "Do not use.\nFor \"_celshader\" read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html\nEntity supports [terrain] properties. They're not so useful here, but you can refer to func_group for descriptions."

	// Editor color
	"editor_color" "007fcc"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var color" "Colour of emitted light. Emission activated by either color or light set. Don't forget to set origin. (vec3_float, def: 1 1 1)"
	"editor_var group" "Name of entity group. Allows to activate all entities of group at once."
	"editor_float light" "Light emitting intensity. Emission activated by either color or light set. Don't forget to set origin. (float, def: 100)"
	"editor_var model2" "Path to custom model attached to entity. Don't forget to set \"origin\". (string)"
	"editor_var origin" "\"model2\" position. (vec3_float)"
	"editor_var targetname" "Can possibly be fired. (string)"
	"editor_var _celshader" "[q3map] Sets the cel shader used for this geometry. Note: omit the \"textures/\" prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)"
	"editor_var _cs" "[q3map] or \"_castShadows\". Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)"
	"editor_float _lightmapscale" "[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)"
	"editor_var _rs" "[q3map] or \"_receiveShadows\". Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)"

	// Property default value
	"color" "1 1 1"
	"group" ""
	"light" "100"
	"model2" ""
	"origin" ""
	"targetname" ""
	"_celshader" ""
	"_cs" ""
	"_lightmapscale" "1"
	"_rs" ""
}

entityDef func_group
{
	// Description
	"editor_usage" "This is not an entity as such. It is strictly an editor utility to group world brushes and patches together for convenience (selecting, moving, copying, etc). You cannot group entities with this.\nThe TAB key can be used to flip through the component pieces of a selected func_group entity, isolating individual components.\n\nFor \"_celshader\" read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html\nFor [terrain] read http://icculus.org/gtkradiant/documentation/Terrain_Manual/start.html [terrain] is done entirely by [q3map]. Don't forget to set q3map_indexmap in shader."

	// Editor color
	"editor_color" "007fcc"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var _celshader" "[q3map] Sets the cel shader used for this geometry. Note: omit the \"textures/\" prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)"
	"editor_var _cs" "[q3map] or \"_castShadows\". Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)"
	"editor_float _lightmapscale" "[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)"
	"editor_var _rs" "[q3map] or \"_receiveShadows\". Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)"
	"editor_var _indexmap" "[terrain] Path to index-colour image representing placement of different textures. (string, eg: maps/indexmap.pcx)"
	"editor_var _layers" "[terrain] Count of terrain textures. Should be equal to count of colours in indexmap palette. (int, eg: 3)"
	"editor_var _offsets" "[terrain] Height offset for each layer. (float_array)"
	"editor_var _shader" "[terrain] Name of metashader. Template for indexed shader names. Note: omit the \"textures/\" prefix. (string, eg: mymap/terrain)"

	// Property default value
	"_celshader" ""
	"_cs" ""
	"_lightmapscale" "1"
	"_rs" ""
	"_indexmap" ""
	"_layers" ""
	"_offsets" ""
	"_shader" ""
}

entityDef func_pendulum
{
	// Description
	"editor_usage" "Solid entity that describes a pendulum back and forth rotation movement. Rotates on the X axis by default. Pendulum frequency is a physical constant based on the length of the beam and gravity. Blocking the pendulum instantly kills a player.\nThe speed of swing (frequency) is not adjustable.\nFor \"_celshader\" read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html\nEntity supports [terrain] properties. They're not so useful here, but you can refer to func_group for descriptions."

	// Editor color
	"editor_color" "007fcc"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var origin" "[required] Rotation axis position. (vec3_float, def: 0 0 0)"
	"editor_var angle" "Short version of \"angles\". (float (yaw), -180.0..180.0, def: 0)"
	"editor_var angles" "Orienting pendulum. (vec3_float (yaw pitch roll), def: [0, 0, 0])"
	"editor_var color" "Colour of emitted light. Emission activated by either color or light set. Don't forget to set origin. (vec3_float, def: 1 1 1)"
	"editor_var dmg" "Damage dealt when blocked. (int, def: 2)"
	"editor_var group" "Name of entity group. Allows to activate all entities of group at once."
	"editor_float light" "Light emitting intensity. Emission activated by either color or light set. Don't forget to set origin. (float, def: 100)"
	"editor_var model2" "Path to custom model attached to entity. Don't forget to set \"origin\". (string)"
	"editor_var noise" "Sound played when activated via targetname. Emitted at origin. (string (sound))"
	"editor_float phase" "Sets the start offset of the swinging cycle. (float, 0..1, def: 0)"
	"editor_float speed" "Angle of swing arc in either direction from initial position. (float, def: 30)"
	"editor_var targetname" "Doesn't work properly. (string)"
	"editor_var _celshader" "[q3map] Sets the cel shader used for this geometry. Note: omit the \"textures/\" prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)"
	"editor_var _cs" "[q3map] or \"_castShadows\". Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)"
	"editor_float _lightmapscale" "[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)"
	"editor_var _rs" "[q3map] or \"_receiveShadows\". Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)"

	// Property default value
	"origin" "0 0 0"
	"angle" "0"
	"angles" "[0, 0, 0]"
	"color" "1 1 1"
	"dmg" "2"
	"group" ""
	"light" "100"
	"model2" ""
	"noise" ""
	"phase" "0"
	"speed" "30"
	"targetname" ""
	"_celshader" ""
	"_cs" ""
	"_lightmapscale" "1"
	"_rs" ""
}

entityDef func_plat
{
	// Description
	"editor_usage" "Rising platform the player can ride to reach higher places. Plats must always be drawn in the raised position, so they will operate and be lighted correctly but they spawn in the lowered position.\nThe plat will stay in the raised position until the player steps off.\nFor \"_celshader\" read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html\nEntity supports [terrain] properties. They're not so useful here, but you can refer to func_group for descriptions."

	// Editor color
	"editor_color" "007fcc"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var color" "Colour of emitted light. Emission activated by either color or light set. Don't forget to set origin. (vec3_float, def: 1 1 1)"
	"editor_var dmg" "Damage dealt when blocked. (int, def: 2)"
	"editor_var group" "Name of entity group. Allows to activate all entities of group at once."
	"editor_float height" "If set, this will determine the total amount of vertical travel of the plat. Place plat at the top point. In game it will spawn at bottom. Overrides \"lip\" option. (float, def: 0)"
	"editor_float light" "Light emitting intensity. Emission activated by either color or light set. Don't forget to set origin. (float, def: 100)"
	"editor_float lip" "When 0, plat displacement = plat's size in direction of movement. Positive lip value discreases displacement, leaving lip remaining at the end of move. Can be overridden by \"height\". If you use lip place your plat near the bottom point. (float, def: 8)"
	"editor_var model2" "Path to custom model attached to entity. Don't forget to set \"origin\". (string)"
	"editor_var noise" "The sound played repeatedly while plat is moving. (string (sound))"
	"editor_var origin" "\"model2\" position. (vec3_float)"
	"editor_var sound1to2" "The sound played on start moving from state 1 to state 2. (string (sound))"
	"editor_var sound2to1" "The sound played on start moving from state 2 to state 1. (string (sound))"
	"editor_var soundPos1" "The sound played reached state 1. (string (sound))"
	"editor_var soundPos2" "The sound played reached state 2. (string (sound))"
	"editor_float speed" "Determines how fast the plat moves. (float, def: 400)"
	"editor_var targetname" "If set, the trigger that points to this will raise the plat each time it fires. The plat raises and comes back down a second later if no player is on it. (string)"
	"editor_var _celshader" "[q3map] Sets the cel shader used for this geometry. Note: omit the \"textures/\" prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)"
	"editor_var _cs" "[q3map] or \"_castShadows\". Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)"
	"editor_float _lightmapscale" "[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)"
	"editor_var _rs" "[q3map] or \"_receiveShadows\". Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)"

	// Property default value
	"color" "1 1 1"
	"dmg" "2"
	"group" ""
	"height" "0"
	"light" "100"
	"lip" "8"
	"model2" ""
	"noise" ""
	"origin" ""
	"sound1to2" ""
	"sound2to1" ""
	"soundPos1" ""
	"soundPos2" ""
	"speed" "400"
	"targetname" ""
	"_celshader" ""
	"_cs" ""
	"_lightmapscale" "1"
	"_rs" ""
}

entityDef func_rotating
{
	// Description
	"editor_usage" "Solid entity that rotates continuously. Rotates on the Z axis by default.\nFor \"_celshader\" read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html\nEntity supports [terrain] properties. They're not so useful here, but you can refer to func_group for descriptions."

	// Editor color
	"editor_color" "007fcc"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var origin" "[required] Rotation axis position. (vec3_float)"
	"editor_float speed" "[required] Determines how fast entity rotates. (float, def: 400)"
	"editor_var color" "Colour of emitted light. Emission activated by either color or light set. Don't forget to set origin. (vec3_float, def: 1 1 1)"
	"editor_var dmg" "Damage dealt when blocked. (int, def: 2)"
	"editor_var group" "Name of entity group. Allows to activate all entities of group at once."
	"editor_float light" "Light emitting intensity. Emission activated by either color or light set. Don't forget to set origin. (float, def: 100)"
	"editor_var model2" "Path to custom model attached to entity. Don't forget to set \"origin\". (string)"
	"editor_var noise" "Sound played when activated via targetname. Emitted at origin. (string (sound))"
	"editor_var targetname" "Doesn't work properly. (string)"
	"editor_var _celshader" "[q3map] Sets the cel shader used for this geometry. Note: omit the \"textures/\" prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)"
	"editor_var _cs" "[q3map] or \"_castShadows\". Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)"
	"editor_float _lightmapscale" "[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)"
	"editor_var _rs" "[q3map] or \"_receiveShadows\". Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)"

	// Property default value
	"origin" ""
	"speed" "400"
	"color" "1 1 1"
	"dmg" "2"
	"group" ""
	"light" "100"
	"model2" ""
	"noise" ""
	"targetname" ""
	"_celshader" ""
	"_cs" ""
	"_lightmapscale" "1"
	"_rs" ""
}

entityDef func_spawn
{
	// Description
	"editor_usage" "Toggleable wall.\nFor \"_celshader\" read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html\nEntity supports [terrain] properties. They're not so useful here, but you can refer to func_group for descriptions."

	// Editor color
	"editor_color" "007fcc"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var _celshader" "[q3map] Sets the cel shader used for this geometry. Note: omit the \"textures/\" prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)"
	"editor_var _cs" "[q3map] or \"_castShadows\". Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)"
	"editor_float _lightmapscale" "[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)"
	"editor_var _rs" "[q3map] or \"_receiveShadows\". Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)"

	// Property default value
	"targetname" ""
	"_celshader" ""
	"_cs" ""
	"_lightmapscale" "1"
	"_rs" ""
}

entityDef func_static
{
	// Description
	"editor_usage" "Static non-solid bspmodel.\nUsed to add colour grading and reverb effects to specific area.\nFor \"_celshader\" read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html\nEntity supports [terrain] properties. They're not so useful here, but you can refer to func_group for descriptions."

	// Editor color
	"editor_color" "007fcc"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var color" "Colour of emitted light. Emission activated by either color or light set. Don't forget to set origin. (vec3_float, def: 1 1 1)"
	"editor_float gradingDistance" "Distance where grading effect appears. (float, def: 250)"
	"editor_var gradingTexture" "If set, there is the grading effect fluently appears when player comes closer. (string)"
	"editor_var group" "Name of entity group. Allows to activate all entities of group at once."
	"editor_float light" "Light emitting intensity. Emission activated by either color or light set. Don't forget to set origin. (float, def: 100)"
	"editor_var model2" "Path to custom model attached to entity. Don't forget to set \"origin\". (string)"
	"editor_var origin" "\"model2\" position. (vec3_float)"
	"editor_float reverbDistance" "Distance where reverb effect appears. (float, def: 250)"
	"editor_var reverbEffect" "Effect name. Use /testReverb <TAB> to view the list of possible values. (string)"
	"editor_float reverbIntensity" "Intensity of reverberation. (float, def: 1)"
	"editor_var targetname" "Can possibly be fired. (string)"
	"editor_var _celshader" "[q3map] Sets the cel shader used for this geometry. Note: omit the \"textures/\" prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)"
	"editor_var _cs" "[q3map] or \"_castShadows\". Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)"
	"editor_float _lightmapscale" "[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)"
	"editor_var _rs" "[q3map] or \"_receiveShadows\". Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)"

	// Property default value
	"color" "1 1 1"
	"gradingDistance" "250"
	"gradingTexture" ""
	"group" ""
	"light" "100"
	"model2" ""
	"origin" ""
	"reverbDistance" "250"
	"reverbEffect" ""
	"reverbIntensity" "1"
	"targetname" ""
	"_celshader" ""
	"_cs" ""
	"_lightmapscale" "1"
	"_rs" ""
}

entityDef func_train
{
	// Description
	"editor_usage" "Trains are moving solids that follow a string of path_corner entities.\nTrains instakill anything in their path by default (unless BLOCK_STOPS set).\nWhen BLOCK_STOPS is set, trains cannot be stopped just by getting in their way, the player must be wedged between the train and another obstacle to block it.\nYou must set proper \"origin\" coordinates. It used as base point for train brush. That base point moves over path_corners, i.e. you can shift the train off the path.\nFor \"_celshader\" read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html\nEntity supports [terrain] properties. They're not so useful here, but you can refer to func_group for descriptions."

	// Editor color
	"editor_color" "007fcc"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var origin" "[required] Base position of train. (vec3_float)"
	"editor_var target" "[required] This points to the first path_corner of the path which is also location of the train's origin. (string (target))"
	"editor_var color" "Colour of emitted light. Emission activated by either color or light set. Don't forget to set origin. (vec3_float, def: 1 1 1)"
	"editor_var dmg" "Unused. (int, def: 2)"
	"editor_var group" "Name of entity group. Allows to activate all entities of group at once."
	"editor_float light" "Light emitting intensity. Emission activated by either color or light set. Don't forget to set origin. (float, def: 100)"
	"editor_var model2" "Path to custom model attached to entity. Don't forget to set \"origin\". (string)"
	"editor_float speed" "Determines how fast the train moves. Can be overridden by path_corner speed. (float, def: 100)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"
	"editor_var _celshader" "[q3map] Sets the cel shader used for this geometry. Note: omit the \"textures/\" prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)"
	"editor_var _cs" "[q3map] or \"_castShadows\". Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)"
	"editor_float _lightmapscale" "[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)"
	"editor_var _rs" "[q3map] or \"_receiveShadows\". Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)"

	// Property default value
	"origin" ""
	"target" ""
	"color" "1 1 1"
	"dmg" "2"
	"group" ""
	"light" "100"
	"model2" ""
	"speed" "100"
	"targetname" ""
	"_celshader" ""
	"_cs" ""
	"_lightmapscale" "1"
	"_rs" ""
}

entityDef path_corner
{
	// Description
	"editor_usage" "Path corner entity that func_trains can be made to follow."

	// Editor color
	"editor_color" "7f4c00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for aiming. (string)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_float speed" "Speed of func_train while moving to the next path corner. This will override the speed value of the train. (float)"
	"editor_var target" "Point to next path_corner in the path. (string (target))"
	"editor_float wait" "Number of seconds func_train will pause on path corner before moving to next path corner. (float, def: 0)"

	// Property default value
	"targetname" ""
	"origin" ""
	"speed" ""
	"target" ""
	"wait" "0"
}

entityDef pos_alien_intermission
{
	// Description
	"editor_usage" "Point where camera will hang when player awaits spawn as alien. There can be many of them, game makes random choice."

	// Editor color
	"editor_color" "ff3300"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "Orientation. (vec3_float (yaw pitch roll))"
	"editor_var onSpawn" "Name of the target fired when player comes to the intermission view. (string (target))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var target" "Alternative way to set orientation. (string (target))"
	"editor_var targetname" "Can possibly be fired. (string)"

	// Property default value
	"angle" ""
	"angles" ""
	"onSpawn" ""
	"origin" ""
	"target" ""
	"targetname" ""
}

entityDef info_alien_intermission
{
	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: pos_alien_intermission\n\nPoint where camera will hang when player awaits spawn as alien. There can be many of them, game makes random choice."

	// Editor color
	"editor_color" "ff3300"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "Orientation. (vec3_float (yaw pitch roll))"
	"editor_var onSpawn" "Name of the target fired when player comes to the intermission view. (string (target))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var target" "Alternative way to set orientation. (string (target))"
	"editor_var targetname" "Can possibly be fired. (string)"

	// Property default value
	"angle" ""
	"angles" ""
	"onSpawn" ""
	"origin" ""
	"target" ""
	"targetname" ""
}

entityDef pos_human_intermission
{
	// Description
	"editor_usage" "Point where camera will hang when player awaits spawn as alien. There can be many of them, game makes random choice."

	// Editor color
	"editor_color" "0033ff"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "Orientation. (vec3_float (yaw pitch roll))"
	"editor_var onSpawn" "Name of the target fired when player comes to the intermission view. (string (target))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var target" "Alternative way to set orientation. (string (target))"
	"editor_var targetname" "Can possibly be fired. (string)"

	// Property default value
	"angle" ""
	"angles" ""
	"onSpawn" ""
	"origin" ""
	"target" ""
	"targetname" ""
}

entityDef info_human_intermission
{
	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: pos_human_intermission\n\nPoint where camera will hang when player awaits spawn as alien. There can be many of them, game makes random choice."

	// Editor color
	"editor_color" "0033ff"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "Orientation. (vec3_float (yaw pitch roll))"
	"editor_var onSpawn" "Name of the target fired when player comes to the intermission view. (string (target))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var target" "Alternative way to set orientation. (string (target))"
	"editor_var targetname" "Can possibly be fired. (string)"

	// Property default value
	"angle" ""
	"angles" ""
	"onSpawn" ""
	"origin" ""
	"target" ""
	"targetname" ""
}

entityDef pos_player_intermission
{
	// Class
	"spawnclass" "idPlayerStart"

	// Description
	"editor_usage" "Point where camera will hang when player awaits spawn as alien. There can be many of them, game makes random choice."

	// Editor color
	"editor_color" "ff00ff"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "Orientation. (vec3_float (yaw pitch roll))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var target" "Alternative way to set orientation. (string (target))"
	"editor_var targetname" "Can possibly be fired. (string)"

	// Property default value
	"angle" ""
	"angles" ""
	"origin" ""
	"target" ""
	"targetname" ""
}

entityDef info_player_intermission
{
	// Class
	"spawnclass" "idPlayerStart"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: pos_player_intermission\n\nPoint where camera will hang when player awaits spawn as alien. There can be many of them, game makes random choice."

	// Editor color
	"editor_color" "ff00ff"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "Orientation. (vec3_float (yaw pitch roll))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var target" "Alternative way to set orientation. (string (target))"
	"editor_var targetname" "Can possibly be fired. (string)"

	// Property default value
	"angle" ""
	"angles" ""
	"origin" ""
	"target" ""
	"targetname" ""
}

entityDef pos_location
{
	// Class
	"spawnclass" "idLocationEntity"

	// Description
	"editor_usage" "Location marker used for team chats. The closest pos_location in sight is used for the location. If none is in sight, the closest in distance is used."

	// Editor color
	"editor_color" "007f00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var count" "Color of the location text displayed in parentheses during team chat. 0: white (default) 1: red 2: green 3: yellow 4: blue 5: cyan 6: magenta 7: white (int)"
	"editor_var message" "Name of the location (text string). Displayed in parentheses in front of all team chat and order messages. (string)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var targetname" "Can possibly be fired. (string)"

	// Property default value
	"count" ""
	"message" ""
	"origin" ""
	"targetname" ""
}

entityDef target_location
{
	// Class
	"spawnclass" "idLocationEntity"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: pos_location\n\nLocation marker used for team chats. The closest pos_location in sight is used for the location. If none is in sight, the closest in distance is used."

	// Editor color
	"editor_color" "007f00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var count" "Color of the location text displayed in parentheses during team chat. 0: white (default) 1: red 2: green 3: yellow 4: blue 5: cyan 6: magenta 7: white (int)"
	"editor_var message" "Name of the location (text string). Displayed in parentheses in front of all team chat and order messages. (string)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var targetname" "Can possibly be fired. (string)"

	// Property default value
	"count" ""
	"message" ""
	"origin" ""
	"targetname" ""
}

entityDef pos_player_spawn
{
	// Class
	"spawnclass" "idPlayerStart"

	// Description
	"editor_usage" "Use pos_player_intermission instead."

	// Editor color
	"editor_color" "ff00ff"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var origin" "Position. (vec3_float)"
	"editor_var targetname" "Can possibly be fired. (string)"

	// Property default value
	"origin" ""
	"targetname" ""
}

entityDef info_player_deathmatch
{
	// Class
	"spawnclass" "idPlayerStart"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: pos_player_spawn\n\nUse pos_player_intermission instead."

	// Editor color
	"editor_color" "ff00ff"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var origin" "Position. (vec3_float)"
	"editor_var targetname" "Can possibly be fired. (string)"

	// Property default value
	"origin" ""
	"targetname" ""
}

entityDef info_player_start
{
	// Class
	"spawnclass" "idPlayerStart"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: pos_player_spawn\n\nUse pos_player_intermission instead."

	// Editor color
	"editor_color" "ff00ff"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var origin" "Position. (vec3_float)"
	"editor_var targetname" "Can possibly be fired. (string)"

	// Property default value
	"origin" ""
	"targetname" ""
}

entityDef pos_target
{
	// Class
	"spawnclass" "idTarget"

	// Description
	"editor_usage" "Aiming target for entities like light, gfx_portal_camera and env_afx_push.\nUsed as a positional target for entities that can use directional pointing."

	// Editor color
	"editor_color" "007f00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for aiming. (string)"
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "Used for env_afx_teleport. Direction in which player will look when teleported. (vec3_float (yaw pitch roll))"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"targetname" ""
	"angle" ""
	"angles" ""
	"origin" ""
}

entityDef target_position
{
	// Class
	"spawnclass" "idTarget"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: pos_target\n\nAiming target for entities like light, gfx_portal_camera and env_afx_push.\nUsed as a positional target for entities that can use directional pointing."

	// Editor color
	"editor_color" "007f00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for aiming. (string)"
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "Used for env_afx_teleport. Direction in which player will look when teleported. (vec3_float (yaw pitch roll))"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"targetname" ""
	"angle" ""
	"angles" ""
	"origin" ""
}

entityDef info_notnull
{
	// Class
	"spawnclass" "idStaticEntity"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: pos_target\n\nAiming target for entities like light, gfx_portal_camera and env_afx_push.\nUsed as a positional target for entities that can use directional pointing."

	// Editor color
	"editor_color" "007f00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for aiming. (string)"
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "Used for env_afx_teleport. Direction in which player will look when teleported. (vec3_float (yaw pitch roll))"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"targetname" ""
	"angle" ""
	"angles" ""
	"origin" ""
}

entityDef misc_teleporter_dest
{
	// Class
	"spawnclass" "idTarget"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: pos_target\n\nAiming target for entities like light, gfx_portal_camera and env_afx_push.\nUsed as a positional target for entities that can use directional pointing."

	// Editor color
	"editor_color" "ff7f3f"

	// Editor sizes
	"editor_mins" "-32 -32 -24"
	"editor_maxs" "32 32 -16"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for aiming. (string)"
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "Used for env_afx_teleport. Direction in which player will look when teleported. (vec3_float (yaw pitch roll))"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"targetname" ""
	"angle" ""
	"angles" ""
	"origin" ""
}

entityDef info_null
{
	// Class
	"spawnclass" "idStaticEntity"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: pos_target\n\nSame as pos_target, but used only at q3map2 stage. I.e. you can use it only for lights."

	// Editor color
	"editor_color" "007f00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for aiming. (string)"
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "Used for env_afx_teleport. Direction in which player will look when teleported. (vec3_float (yaw pitch roll))"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"targetname" ""
	"angle" ""
	"angles" ""
	"origin" ""
}

entityDef target_print
{
	// Class
	"spawnclass" "idTarget"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\n\nThis will print a message on the center of the screen when triggered.\nBy default, all the clients will see the message."

	// Editor color
	"editor_color" "007f00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var message" "text string to print on screen. (string)"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"targetname" ""
	"message" ""
	"origin" ""
}

entityDef target_push
{
	// Class
	"spawnclass" "idTarget"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\n\nDO NOT USE THIS ENTITY, USE env_afx_push!\nThis can be used to create jump pads and launch ramps.\nUnlike trigger_push, this is NOT client side predicted and must be activated by a trigger.\nTo make a jump pad or launch ramp, create a trigger_multiple where the jump must originate. Place the target_push directly above the trigger_multiple and place the target_position entity at the highest point of the jump. Target the trigger_multiple to the target_push and target the target_push to the target_position/info_notnull."

	// Editor color
	"editor_color" "7f7f7f"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] The activating trigger points to this. Push originates from the location of the trigger. (string)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var target" "This points to the aiming entity to which the player will jump. (string (target))"

	// Property default value
	"targetname" ""
	"origin" ""
	"target" ""
}

entityDef target_teleporter
{
	// Class
	"spawnclass" "idTarget"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\n\nDO NOT USE THIS ENTITY, USE env_afx_teleport!\nActivating this will teleport players to the location of the targeted misc_teleporter_dest entity. Unlike trigger_teleport, this entity must be activated by a trigger and does NOT allow client prediction of events."

	// Editor color
	"editor_color" "007f00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_float speed" "Player speed after teleportation. (float)"
	"editor_var target" "This must point to a misc_teleporter_dest entity. (string (target))"

	// Property default value
	"targetname" ""
	"origin" ""
	"speed" ""
	"target" ""
}

entityDef target_hurt
{
	// Class
	"spawnclass" "idTarget"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\n\nDO NOT USE THIS ENTITY, USE env_afx_hurt!\nWhen triggered, this hurts the entity that caused the trigger."

	// Editor color
	"editor_color" "ff0000"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var dmg" "Amount of damage to deal. (int, def: 5)"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"targetname" ""
	"dmg" "5"
	"origin" ""
}

entityDef team_human_spawn
{
	// Class
	"spawnclass" "idSpawnableEntity"

	// Description
	"editor_usage" "The human spawn point."

	// Editor color
	"editor_color" "0033ff"

	// Editor sizes
	"editor_mins" "-40 -40 -4"
	"editor_maxs" "40 40 17"

	// Property description
	"editor_var angle" "Player orientation after spawn. (float (yaw))"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"angle" ""
	"origin" ""

	"model" "models/buildables/telenode/telenode.iqm"
}

entityDef team_human_armoury
{
	// Class
	"spawnclass" "idSpawnableEntity"

	// Description
	"editor_usage" "The human armoury."

	// Editor color
	"editor_color" "0033ff"

	// Editor sizes
	"editor_mins" "-40 -40 -13"
	"editor_maxs" "40 40 50"

	// Property description
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"origin" ""

	"model" "models/buildables/arm/arm.iqm"
}

entityDef team_human_drill
{
	// Class
	"spawnclass" "idSpawnableEntity"

	// Description
	"editor_usage" "The human drill."

	// Editor color
	"editor_color" "0033ff"

	// Editor sizes
	"editor_mins" "-15 -15 0"
	"editor_maxs" "15 15 58"

	// Property description
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"origin" ""

	"model" "models/buildables/drill/drill.iqm"
}

entityDef team_human_medistat
{
	// Class
	"spawnclass" "idSpawnableEntity"

	// Description
	"editor_usage" "The human medical station."

	// Editor color
	"editor_color" "0033ff"

	// Editor sizes
	"editor_mins" "-35 -35 -7"
	"editor_maxs" "35 35 2"

	// Property description
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"origin" ""

	"model" "models/buildables/medistat/medistat.iqm"
}

entityDef team_human_mgturret
{
	// Class
	"spawnclass" "idSpawnableEntity"

	// Description
	"editor_usage" "The human machinegun turret."

	// Editor color
	"editor_color" "0033ff"

	// Editor sizes
	"editor_mins" "-25 -25 -20"
	"editor_maxs" "25 25 20"

	// Property description
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"origin" ""

	"model" "models/buildables/mgturret/mgturret.iqm"
}

entityDef team_human_rocketpod
{
	// Class
	"spawnclass" "idSpawnableEntity"

	// Description
	"editor_usage" "The human rocket pod."

	// Editor color
	"editor_color" "0033ff"

	// Editor sizes
	"editor_mins" "-25 -25 -20"
	"editor_maxs" "25 25 20"

	// Property description
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"origin" ""

	"model" "models/buildables/rocketpod/rocketpod.iqm"
}

entityDef team_human_reactor
{
	// Class
	"spawnclass" "idSpawnableEntity"

	// Description
	"editor_usage" "The human reactor."

	// Editor color
	"editor_color" "0033ff"

	// Editor sizes
	"editor_mins" "-41 -41 -4"
	"editor_maxs" "41 41 100"

	// Property description
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"origin" ""

	"model" "models/buildables/reactor/reactor.iqm"
}

entityDef team_alien_spawn
{
	// Class
	"spawnclass" "idSpawnableEntity"

	// Description
	"editor_usage" "The alien spawn point."

	// Editor color
	"editor_color" "ff3300"

	// Editor sizes
	"editor_mins" "-15 -15 -15"
	"editor_maxs" "15 15 15"

	// Property description
	"editor_var angle" "Player orientation after spawn. (float (yaw))"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"angle" ""
	"origin" ""

	"model" "models/buildables/eggpod/eggpod.iqm"
}

entityDef team_alien_acid_tube
{
	// Class
	"spawnclass" "idSpawnableEntity"

	// Description
	"editor_usage" "The alien acid tube."

	// Editor color
	"editor_color" "ff3300"

	// Editor sizes
	"editor_mins" "-20 -20 -15"
	"editor_maxs" "20 20 15"

	// Property description
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"origin" ""

	"model" "models/buildables/acid_tube/acid_tube.iqm"
}

entityDef team_alien_spiker
{
	// Class
	"spawnclass" "idSpawnableEntity"

	// Description
	"editor_usage" "The alien spiker."

	// Editor color
	"editor_color" "ff3300"

	// Editor sizes
	"editor_mins" "-20 -20 -15"
	"editor_maxs" "20 20 15"

	// Property description
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"origin" ""

	"model" "models/buildables/spiker/spiker.iqm"
}

entityDef team_alien_barricade
{
	// Class
	"spawnclass" "idSpawnableEntity"

	// Description
	"editor_usage" "The alien barricade."

	// Editor color
	"editor_color" "ff3300"

	// Editor sizes
	"editor_mins" "-35 -35 -15"
	"editor_maxs" "35 35 60"

	// Property description
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"origin" ""

	"model" "models/buildables/barricade/barricade.iqm"
}

entityDef team_alien_booster
{
	// Class
	"spawnclass" "idSpawnableEntity"

	// Description
	"editor_usage" "The alien booster."

	// Editor color
	"editor_color" "ff3300"

	// Editor sizes
	"editor_mins" "-26 -26 -9"
	"editor_maxs" "26 26 9"

	// Property description
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"origin" ""

	"model" "models/buildables/booster/booster.iqm"
}

entityDef team_alien_overmind
{
	// Class
	"spawnclass" "idSpawnableEntity"

	// Description
	"editor_usage" "The alien overmind."

	// Editor color
	"editor_color" "ff3300"

	// Editor sizes
	"editor_mins" "-45 -45 -15"
	"editor_maxs" "45 45 95"

	// Property description
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"origin" ""

	"model" "models/buildables/overmind/overmind.iqm"
}

entityDef team_alien_trapper
{
	// Class
	"spawnclass" "idSpawnableEntity"

	// Description
	"editor_usage" "The alien trapper."

	// Editor color
	"editor_color" "ff3300"

	// Editor sizes
	"editor_mins" "-15 -15 -15"
	"editor_maxs" "15 15 15"

	// Property description
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"origin" ""

	"model" "models/buildables/trapper/trapper.iqm"
}

entityDef team_alien_hive
{
	// Class
	"spawnclass" "idSpawnableEntity"

	// Description
	"editor_usage" "The alien hive."

	// Editor color
	"editor_color" "ff3300"

	// Editor sizes
	"editor_mins" "-20 -20 -20"
	"editor_maxs" "20 20 20"

	// Property description
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"origin" ""

	"model" "models/buildables/hive/hive.iqm"
}

entityDef team_alien_leech
{
	// Class
	"spawnclass" "idSpawnableEntity"

	// Description
	"editor_usage" "The alien leech."

	// Editor color
	"editor_color" "ff3300"

	// Editor sizes
	"editor_mins" "-40 -40 -15"
	"editor_maxs" "40 40 15"

	// Property description
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"origin" ""

	"model" "models/buildables/leech/leech.iqm"
}

entityDef ctrl_limited
{
	// Description
	"editor_usage" "Can be triggered limited amount of times. Every activation fires targets."

	// Editor color
	"editor_color" "00b3b3"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var target" "[required] Must have entity to fire at. (string (target))"
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var amount" "Possible activation count. (int, def: 1)"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"target" ""
	"targetname" ""
	"amount" "1"
	"origin" ""
}

entityDef ctrl_relay
{
	// Description
	"editor_usage" "When activated waits amount of time then activates its own targets."

	// Editor color
	"editor_color" "00b3b3"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var onAct" "[required] Name of the target to activate. (string (target))"
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var wait" "Delay before target activation. (time_2float (time [variance]), def: 0)"

	// Property default value
	"onAct" ""
	"targetname" ""
	"origin" ""
	"wait" "0"
}

entityDef target_relay
{
	// Class
	"spawnclass" "idTarget"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: ctrl_relay\n\nWhen activated waits amount of time then activates its own targets."

	// Editor color
	"editor_color" "00b3b3"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var target" "[required] Name of the target to activate. (string (target))"
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var wait" "Delay before target activation. (time_2float (time [variance]), def: 0)"

	// Property default value
	"target" ""
	"targetname" ""
	"origin" ""
	"wait" "0"
}

entityDef target_delay
{
	// Class
	"spawnclass" "idTarget"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: ctrl_relay\n\nWhen activated waits amount of time then activates its own targets."

	// Editor color
	"editor_color" "00b3b3"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var target" "[required] Name of the target to activate. (string (target))"
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var wait" "Delay before target activation. (time_2float (time [variance]), def: 1)"

	// Property default value
	"target" ""
	"targetname" ""
	"origin" ""
	"wait" "1"
}

entityDef env_afx_ammo
{
	// Description
	"editor_usage" "Gives funds to the player who activates it (e.g. via button)."

	// Editor color
	"editor_color" "5b7c2d"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var ammo" "Amount of ammo. Values < 1 corrected to 1. (int, def: 1)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"

	// Property default value
	"ammo" "1"
	"targetname" ""
}

entityDef trigger_ammo
{
	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: env_afx_ammo\n\nGives funds to the player who activates it (e.g. via button)."

	// Editor color
	"editor_color" "5b7c2d"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var ammo" "Amount of ammo. Values < 1 corrected to 1. (int, def: 1)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"

	// Property default value
	"ammo" "1"
	"targetname" ""
}

entityDef env_afx_gravity
{
	// Description
	"editor_usage" "Area with different gravity within."

	// Editor color
	"editor_color" "7f7f7f"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var amount" "The gravity within this entity. (int, def: 800)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"

	// Property default value
	"amount" "800"
	"targetname" ""
}

entityDef trigger_gravity
{
	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: env_afx_gravity\n\nArea with different gravity within."

	// Editor color
	"editor_color" "7f7f7f"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var amount" "The gravity within this entity. (int, def: 800)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"

	// Property default value
	"amount" "800"
	"targetname" ""
}

entityDef env_afx_heal
{
	// Description
	"editor_usage" "Heals players touching entity."

	// Editor color
	"editor_color" "2d7c50"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var heal" "Amount of heal. Values < 1 corrected to 1. (int, def: 5)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"

	// Property default value
	"heal" "5"
	"targetname" ""
}

entityDef trigger_heal
{
	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: env_afx_heal\n\nHeals players touching entity."

	// Editor color
	"editor_color" "2d7c50"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var heal" "Amount of heal. Values < 1 corrected to 1. (int, def: 5)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"

	// Property default value
	"heal" "5"
	"targetname" ""
}

entityDef env_afx_hurt
{
	// Description
	"editor_usage" "Hurts players or buildings touching entity."

	// Editor color
	"editor_color" "c81111"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var dmg" "Damage dealt. Values <= 0 corrected to default value. (int, def: 5)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"

	// Property default value
	"dmg" "5"
	"targetname" ""
}

entityDef trigger_hurt
{
	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: env_afx_hurt\n\nHurts players or buildings touching entity."

	// Editor color
	"editor_color" "c81111"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var dmg" "Damage dealt. Values <= 0 corrected to default value. (int, def: 5)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"

	// Property default value
	"dmg" "5"
	"targetname" ""
}

entityDef env_afx_push
{
	// Description
	"editor_usage" "This is used to create jump pads and launch ramps."

	// Editor color
	"editor_color" "7f7f7f"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var target" "Name of the aiming position entity to which the player will jump. This is the highest point of the jump. (string (target))"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"
	"editor_var wait" "Delay between triggerings. (time_2float (time [variance]), def: [0.5, 0])"

	// Property default value
	"target" ""
	"targetname" ""
	"wait" "[0.5, 0]"
}

entityDef trigger_push
{
	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: env_afx_push\n\nThis is used to create jump pads and launch ramps."

	// Editor color
	"editor_color" "7f7f7f"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var target" "Name of the aiming position entity to which the player will jump. This is the highest point of the jump. (string (target))"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"
	"editor_var wait" "Delay between triggerings. (time_2float (time [variance]), def: [0.5, 0])"

	// Property default value
	"target" ""
	"targetname" ""
	"wait" "[0.5, 0]"
}

entityDef env_afx_teleport
{
	// Description
	"editor_usage" "Teleports player touching entity.\nSet \"angles\" property of target to define player direction after teleportation."

	// Editor color
	"editor_color" "754928"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_float speed" "Player speed after teleportation. (float, def: 400)"
	"editor_var target" "Name of the target point. You can set same targetname to many positions, they will be chosen randomly. (string (target))"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"

	// Property default value
	"speed" "400"
	"target" ""
	"targetname" ""
}

entityDef trigger_teleport
{
	// Class
	"spawnclass" "idTrigger"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: env_afx_teleport\n\nTeleports player touching entity.\nSet \"angles\" property of target to define player direction after teleportation."

	// Editor color
	"editor_color" "754928"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_float speed" "Player speed after teleportation. (float, def: 400)"
	"editor_var target" "Name of the target point. You can set same targetname to many positions, they will be chosen randomly. (string (target))"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"

	// Property default value
	"speed" "400"
	"target" ""
	"targetname" ""
}

entityDef fx_rumble
{
	// Description
	"editor_usage" "When triggered, this initiates a level-wide rumble effect. All players are affected."

	// Editor color
	"editor_color" "ff0000"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var amount" "Duration of the quake. (int, def: 10)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_float speed" "Severity of the quake. (float, def: 100)"

	// Property default value
	"targetname" ""
	"amount" "10"
	"origin" ""
	"speed" "100"
}

entityDef target_rumble
{
	// Class
	"spawnclass" "idTarget"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: fx_rumble\n\nWhen triggered, this initiates a level-wide rumble effect. All players are affected."

	// Editor color
	"editor_color" "ff0000"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var amount" "Duration of the quake. (int, def: 10)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_float speed" "Severity of the quake. (float, def: 100)"

	// Property default value
	"targetname" ""
	"amount" "10"
	"origin" ""
	"speed" "100"
}

entityDef game_end
{
	// Class
	"spawnclass" "idTrigger"

	// Description
	"editor_usage" "When triggered, this causes an unconditional win for the team."

	// Editor color
	"editor_color" "ff0000"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var team" "1 for aliens, 2 for humans. (int)"

	// Property default value
	"targetname" ""
	"origin" ""
	"team" ""
}

entityDef target_alien_win
{
	// Class
	"spawnclass" "idTarget"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: game_end\n\nWhen triggered, this causes an unconditional win for the team."

	// Editor color
	"editor_color" "ff3300"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"targetname" ""
	"origin" ""
}

entityDef target_human_win
{
	// Class
	"spawnclass" "idTarget"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: game_end\n\nWhen triggered, this causes an unconditional win for the team."

	// Editor color
	"editor_color" "0033ff"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"targetname" ""
	"origin" ""
}

entityDef game_funds
{
	// Description
	"editor_usage" "Gives funds to the player who activates it (e.g. via button)."

	// Editor color
	"editor_color" "ff0000"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var amount" "Amount of funds. 1 = 1 credit = 0.01 evo. (int, def: 0)"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"targetname" ""
	"amount" "0"
	"origin" ""
}

entityDef game_kill
{
	// Description
	"editor_usage" "Gives funds to the player who activates it (e.g. via button)."

	// Editor color
	"editor_color" "ff0000"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"targetname" ""
	"origin" ""
}

entityDef target_kill
{
	// Class
	"spawnclass" "idTarget"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: game_kill\n\nGives funds to the player who activates it (e.g. via button)."

	// Editor color
	"editor_color" "ff0000"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"targetname" ""
	"origin" ""
}

entityDef game_score
{
	// Description
	"editor_usage" "Gives funds to the player who activates it (e.g. via button)."

	// Editor color
	"editor_color" "ff0000"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var amount" "Amount of score points. 50 = 1 score, calculated as quantity of funds game gives you when you earn amount of score. (int, def: 1)"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"targetname" ""
	"amount" "1"
	"origin" ""
}

entityDef target_score
{
	// Class
	"spawnclass" "idTarget"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: game_score\n\nGives funds to the player who activates it (e.g. via button)."

	// Editor color
	"editor_color" "ff0000"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var amount" "Amount of score points. 50 = 1 score, calculated as quantity of funds game gives you when you earn amount of score. (int, def: 1)"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"targetname" ""
	"amount" "1"
	"origin" ""
}

entityDef gfx_animated_model
{
	// Description
	"editor_usage" "Animated model entity. Not baked info level geometry. Can be walked through."

	// Editor color
	"editor_color" "ff7f3f"

	// Editor sizes
	"editor_mins" "-12 -12 -12"
	"editor_maxs" "12 12 12"

	// Property description
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "Orientation. (vec3_float (yaw pitch roll))"
	"editor_var animation" "The guts of the entity. This is identical to an entry in an animation.cfg - Start Frame, Number of frames, Looping Frames, Frame rate. (vec4_float (start count loopbackcount framerate), eg: [0, 30, 30, 20])"
	"editor_var model" "Path to a model. (string, eg: models/mapobjects/teleporter/teleporter.md3)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_float radius" "The scale of the model compared to its original size. (float, def: 1)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"

	// Property default value
	"angle" ""
	"angles" ""
	"animation" ""
	"model" ""
	"origin" ""
	"radius" "1"
	"targetname" ""
}

entityDef misc_anim_model
{
	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: gfx_animated_model\n\nAnimated model entity. Not baked info level geometry. Can be walked through."

	// Editor color
	"editor_color" "ff7f3f"

	// Editor sizes
	"editor_mins" "-12 -12 -12"
	"editor_maxs" "12 12 12"

	// Property description
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "Orientation. (vec3_float (yaw pitch roll))"
	"editor_var animation" "The guts of the entity. This is identical to an entry in an animation.cfg - Start Frame, Number of frames, Looping Frames, Frame rate. (vec4_float (start count loopbackcount framerate), eg: [0, 30, 30, 20])"
	"editor_var model" "Path to a model. (string, eg: models/mapobjects/teleporter/teleporter.md3)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_float radius" "The scale of the model compared to its original size. (float, def: 1)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"

	// Property default value
	"angle" ""
	"angles" ""
	"animation" ""
	"model" ""
	"origin" ""
	"radius" "1"
	"targetname" ""
}

entityDef misc_model
{
	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\n\nStatic model baked into level geometry by q3map2. Can be walked through. Not animated, but you can choose one of the frames.\nFor \"_celshader\" read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html"

	// Editor color
	"editor_color" "ff7f3f"

	// Editor sizes
	"editor_mins" "-12 -12 -12"
	"editor_maxs" "12 12 12"

	// Property description
	"editor_var angle" "[q3map] Short version of \"angles\". (float (yaw))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var _celshader" "[q3map] Sets the cel shader used for this geometry. Note: omit the \"textures/\" prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)"
	"editor_var _cs" "[q3map] or \"_castShadows\". Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)"
	"editor_var _frame" "[q3map] Animation frame to pick. This differs from gfx_animated_model.animation! (int, eg: 5)"
	"editor_float _lightmapscale" "[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)"
	"editor_var _remap*" "[q3map] Remap shaders. Any property name starting with \"_remap\" counts. Values are ; separated. (string, eg: models/buildables/tesla/tesla_main;textures/newmap/ter_dirt)"
	"editor_var _rs" "[q3map] or \"_receiveShadows\". Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)"
	"editor_var angles" "[q3map] Full model orientation. (vec3_float (yaw pitch roll))"
	"editor_var model" "[q3map] Path to a custom model. (string)"
	"editor_float modelscale" "[q3map] Scale factor. (float, def: 1)"
	"editor_var modelscale_vec" "[q3map] Separate scale factor per axis. (vec3_float, def: 1 1 1)"

	// Property default value
	"angle" ""
	"origin" ""
	"_celshader" ""
	"_cs" ""
	"_frame" ""
	"_lightmapscale" "1"
	"_remap*" ""
	"_rs" ""
	"angles" ""
	"model" ""
	"modelscale" "1"
	"modelscale_vec" "1 1 1"
}

entityDef gfx_light_flare
{
	// Description
	"editor_usage" "A light flare entity."

	// Editor color
	"editor_color" "a6a6ff"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "This reflects which direction the flare points. It is not important unless the second component of the radius key is employed. (vec3_float (yaw pitch roll))"
	"editor_var mindist" "Minimal distance for flare to appear. (int, def: 0)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var radius" "The radius key is a vector.\nThe first component is the size of the light flare. The radius is calculated by taking the distance of the viewer from the light flare and dividing by this key, so the larger the key value, the smaller the flare. Values between 2 and 10 are sensible.\nThe second component indicates the angle around the direction the flare points for which it is visible. For example a value of 90 means that you can see the flare while infront of the entity, but not when behind it. If set to zero the light flare will be visible from any angle\nThe third component is similar to the first except that it specifies the size of the light source rather than the size of the light flare itself. This is useful when the higher detail flare fading modes are enabled. If this is set to the same value as the first component, fading will commence as soon as the edge of the light flare is occluded by some surface between the viewer and the flare. If it is set larger the flare will overlap the occluding surface before it begins to fade. (vec3_float)"
	"editor_var shader" "The name of the shader of the light flare. (string)"
	"editor_float speed" "Fading time, msec. Useful only for cg_lightFlare 2. (float, def: 200)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"

	// Property default value
	"angle" ""
	"angles" ""
	"mindist" "0"
	"origin" ""
	"radius" ""
	"shader" ""
	"speed" "200"
	"targetname" ""
}

entityDef misc_light_flare
{
	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: gfx_light_flare\n\nA light flare entity."

	// Editor color
	"editor_color" "a6a6ff"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "This reflects which direction the flare points. It is not important unless the second component of the radius key is employed. (vec3_float (yaw pitch roll))"
	"editor_var mindist" "Minimal distance for flare to appear. (int, def: 0)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var radius" "The radius key is a vector.\nThe first component is the size of the light flare. The radius is calculated by taking the distance of the viewer from the light flare and dividing by this key, so the larger the key value, the smaller the flare. Values between 2 and 10 are sensible.\nThe second component indicates the angle around the direction the flare points for which it is visible. For example a value of 90 means that you can see the flare while infront of the entity, but not when behind it. If set to zero the light flare will be visible from any angle\nThe third component is similar to the first except that it specifies the size of the light source rather than the size of the light flare itself. This is useful when the higher detail flare fading modes are enabled. If this is set to the same value as the first component, fading will commence as soon as the edge of the light flare is occluded by some surface between the viewer and the flare. If it is set larger the flare will overlap the occluding surface before it begins to fade. (vec3_float)"
	"editor_var shader" "The name of the shader of the light flare. (string)"
	"editor_float speed" "Fading time, msec. Useful only for cg_lightFlare 2. (float, def: 200)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"

	// Property default value
	"angle" ""
	"angles" ""
	"mindist" "0"
	"origin" ""
	"radius" ""
	"shader" ""
	"speed" "200"
	"targetname" ""
}

entityDef gfx_particle_system
{
	// Description
	"editor_usage" "Particle system entity."

	// Editor color
	"editor_color" "ff7f3f"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "Particle system orientation. (vec3_float (yaw pitch roll))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var psName" "Name of particle system. Look at scripts/*.particle, they contain particle system effects along with their names. (string, eg: firebomb_subPS, def: )"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"
	"editor_float wait" "Wait after toggle, then toggle again. Disabled if value <= 0. (float)"

	// Property default value
	"angle" ""
	"angles" ""
	"origin" ""
	"psName" ""
	"targetname" ""
	"wait" ""
}

entityDef misc_particle_system
{
	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: gfx_particle_system\n\nParticle system entity."

	// Editor color
	"editor_color" "ff7f3f"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "Particle system orientation. (vec3_float (yaw pitch roll))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var psName" "Name of particle system. Look at scripts/*.particle, they contain particle system effects along with their names. (string, eg: firebomb_subPS, def: )"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"
	"editor_float wait" "Wait after toggle, then toggle again. Disabled if value <= 0. (float)"

	// Property default value
	"angle" ""
	"angles" ""
	"origin" ""
	"psName" ""
	"targetname" ""
	"wait" ""
}

entityDef gfx_portal_camera
{
	// Class
	"spawnclass" "idCamera"

	// Description
	"editor_usage" "Portal camera.\nThis camera is used to project its view onto a portal surface in the level through the intermediary of a gfx_portal_surface entity. Use the \"angles\" key or target a pos_target entity to set the camera's pointing direction.\nBoth the setting \"angles\" key or targeting a pos_target methods can be used to aim the camera. However, the pos_target method is simpler. In both cases, the \"roll\" key must be used to set the roll angle.\nBy default camera is wiggling. Use spawnflags to make it rotate or stand still."

	// Editor color
	"editor_color" "ff7f3f"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] A gfx_portal_surface portal surface indicator must point to this. (string)"
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "Camera orientation. 3rd component is ignored in favour of \"roll\". (vec3_float (yaw pitch roll))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var roll" "Roll angle of camera."
	"editor_var target" "Point this to a pos_target entity to set the camera's pointing direction. (string (target))"

	// Property default value
	"targetname" ""
	"angle" ""
	"angles" ""
	"origin" ""
	"roll" ""
	"target" ""
}

entityDef misc_portal_camera
{
	// Class
	"spawnclass" "idCamera"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: gfx_portal_camera\n\nPortal camera.\nThis camera is used to project its view onto a portal surface in the level through the intermediary of a gfx_portal_surface entity. Use the \"angles\" key or target a pos_target entity to set the camera's pointing direction.\nBoth the setting \"angles\" key or targeting a pos_target methods can be used to aim the camera. However, the pos_target method is simpler. In both cases, the \"roll\" key must be used to set the roll angle.\nBy default camera is wiggling. Use spawnflags to make it rotate or stand still."

	// Editor color
	"editor_color" "ff7f3f"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] A gfx_portal_surface portal surface indicator must point to this. (string)"
	"editor_var angle" "Short version of \"angles\". (float (yaw))"
	"editor_var angles" "Camera orientation. 3rd component is ignored in favour of \"roll\". (vec3_float (yaw pitch roll))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var roll" "Roll angle of camera."
	"editor_var target" "Point this to a pos_target entity to set the camera's pointing direction. (string (target))"

	// Property default value
	"targetname" ""
	"angle" ""
	"angles" ""
	"origin" ""
	"roll" ""
	"target" ""
}

entityDef gfx_portal_surface
{
	// Description
	"editor_usage" "Portal surface indicator. This will \"lock on\" the brush face closest to it and identify as a portal. The view displayed on the portal surface is the view of the gfx_portal_camera that this entity targets. Also used for mirrors (see Notes).\nThe entity must be no farther than 64 units away from the portal surface to lock onto it. To make a mirror, apply the common/mirror shader to the surface, place this entity near it but don't target a gfx_portal_camera."

	// Editor color
	"editor_color" "ff7f3f"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var origin" "Position. (vec3_float)"
	"editor_var target" "Point this to a gfx_portal_camera that \"sees\" the view you want to display on the portal. (string (target))"
	"editor_var targetname" "Can possibly be fired. (string)"

	// Property default value
	"origin" ""
	"target" ""
	"targetname" ""
}

entityDef misc_portal_surface
{
	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: gfx_portal_surface\n\nPortal surface indicator. This will \"lock on\" the brush face closest to it and identify as a portal. The view displayed on the portal surface is the view of the gfx_portal_camera that this entity targets. Also used for mirrors (see Notes).\nThe entity must be no farther than 64 units away from the portal surface to lock onto it. To make a mirror, apply the common/mirror shader to the surface, place this entity near it but don't target a gfx_portal_camera."

	// Editor color
	"editor_color" "ff7f3f"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var origin" "Position. (vec3_float)"
	"editor_var target" "Point this to a gfx_portal_camera that \"sees\" the view you want to display on the portal. (string (target))"
	"editor_var targetname" "Can possibly be fired. (string)"

	// Property default value
	"origin" ""
	"target" ""
	"targetname" ""
}

entityDef gfx_shader_mod
{
	// Description
	"editor_usage" "Entity remaps shader when activated."

	// Editor color
	"editor_color" "ff7f3f"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var targetname" "[required] Must be someone's target for firing. (string)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var replacement" "Name of replacement shader. (string)"
	"editor_var shader" "Name of original shader. (string)"

	// Property default value
	"targetname" ""
	"origin" ""
	"replacement" ""
	"shader" ""
}

entityDef sensor_buildable
{
	// Class
	"spawnclass" "idTrigger"

	// Description
	"editor_usage" "Triggered by a buildable or subset of buildables.\nIf condition is satisfied fires targets continuously with \"wait\" period.\nIf NEGATE used, sensor still needs to be touched to activate."

	// Editor color
	"editor_color" "43aa00"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var target" "[required] Must have entity to fire at. (string (target))"
	"editor_var buildables" "A comma delimited list of buildables which will trigger this entity. If omitted matches all buildables. (eggpod,overmind,barricade,acid_tube,trapper,booster,hive,leech,telenode,mgturret, tesla,arm,medistat,drill,reactor,repeater)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"
	"editor_var wait" "Time in seconds until trigger becomes re-triggerable after it's been touched. (time_2float (time [variance]), def: [0.5, 0])"

	// Property default value
	"target" ""
	"buildables" ""
	"targetname" ""
	"wait" "[0.5, 0]"
}

entityDef trigger_buildable
{
	// Class
	"spawnclass" "idTrigger"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: sensor_buildable\n\nTriggered by a buildable or subset of buildables.\nIf condition is satisfied fires targets continuously with \"wait\" period.\nIf NEGATE used, sensor still needs to be touched to activate."

	// Editor color
	"editor_color" "43aa00"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var target" "[required] Must have entity to fire at. (string (target))"
	"editor_var buildables" "A comma delimited list of buildables which will trigger this entity. If omitted matches all buildables. (eggpod,overmind,barricade,acid_tube,trapper,booster,hive,leech,telenode,mgturret, tesla,arm,medistat,drill,reactor,repeater)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"
	"editor_var wait" "Time in seconds until trigger becomes re-triggerable after it's been touched. (time_2float (time [variance]), def: [0.5, 0])"

	// Property default value
	"target" ""
	"buildables" ""
	"targetname" ""
	"wait" "[0.5, 0]"
}

entityDef sensor_creep
{
	// Description
	"editor_usage" "Detects creep, i.e. area where the building is allowed.\nIf condition is satisfied fires targets continuously."

	// Editor color
	"editor_color" "43aa00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var target" "[required] Must have entity to fire at. (string (target))"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"target" ""
	"origin" ""
}

entityDef sensor_end
{
	// Description
	"editor_usage" "Fires its targets when the team wins."

	// Editor color
	"editor_color" "43aa00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var target" "[required] Must have entity to fire at. (string (target))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"
	"editor_var team" "1 for aliens, 2 for humans. 0 or omit to detect draw. (int)"

	// Property default value
	"target" ""
	"origin" ""
	"targetname" ""
	"team" ""
}

entityDef trigger_win
{
	// Class
	"spawnclass" "idTrigger"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: sensor_end\n\nFires its targets when the team wins."

	// Editor color
	"editor_color" "43aa00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var target" "[required] Must have entity to fire at. (string (target))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"
	"editor_var team" "1 for aliens, 2 for humans. 0 or omit to detect draw. (int)"

	// Property default value
	"target" ""
	"origin" ""
	"targetname" ""
	"team" ""
}

entityDef sensor_player
{
	// Description
	"editor_usage" "Triggered by a specific class or subset of classes. If no classes key is supplied every class will trigger this entity.\nTriggered by a player carrying some item (weapon or upgrade) or subset of items. If no equipment key is supplied every human will trigger this entity."

	// Editor color
	"editor_color" "43aa00"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var target" "[required] Must have entity to fire at. (string (target))"
	"editor_var classes" "A comma delimited list of alien classes which will trigger this entity. (builder,builderupg,level0,level1,level2,level2upg,level3,level3upg,level4)"
	"editor_var equipment" "A comma delimited list of human weapons or upgrades which will trigger this entity. (rifle,psaw,shotgun,lgun,mdriver,chaingun,flamer,prifle,lcannon, larmour,marmour,bsuit,radar,battpack,jetpack,gren,firebomb)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"
	"editor_var team" "1 for aliens, 2 for humans. Omit if you don't want to check the team. Not affected by NEGATE. (int)"
	"editor_var wait" "Time in seconds until trigger becomes re-triggerable after it's been touched. (time_2float (time [variance]), def: [0.5, 0])"

	// Property default value
	"target" ""
	"classes" ""
	"equipment" ""
	"targetname" ""
	"team" ""
	"wait" "[0.5, 0]"
}

entityDef trigger_class
{
	// Class
	"spawnclass" "idTrigger"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: sensor_player\n\nTriggered by a specific class or subset of classes. If no classes key is supplied every class will trigger this entity.\nTriggered by a player carrying some item (weapon or upgrade) or subset of items. If no equipment key is supplied every human will trigger this entity."

	// Editor color
	"editor_color" "43aa00"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var target" "[required] Must have entity to fire at. (string (target))"
	"editor_var classes" "A comma delimited list of alien classes which will trigger this entity. (builder,builderupg,level0,level1,level2,level2upg,level3,level3upg,level4)"
	"editor_var equipment" "A comma delimited list of human weapons or upgrades which will trigger this entity. (rifle,psaw,shotgun,lgun,mdriver,chaingun,flamer,prifle,lcannon, larmour,marmour,bsuit,radar,battpack,jetpack,gren,firebomb)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"
	"editor_var team" "1 for aliens, 2 for humans. Omit if you don't want to check the team. Not affected by NEGATE. (int)"
	"editor_var wait" "Time in seconds until trigger becomes re-triggerable after it's been touched. (time_2float (time [variance]), def: [0.5, 0])"

	// Property default value
	"target" ""
	"classes" ""
	"equipment" ""
	"targetname" ""
	"team" ""
	"wait" "[0.5, 0]"
}

entityDef trigger_equipment
{
	// Class
	"spawnclass" "idTrigger"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: sensor_player\n\nTriggered by a specific class or subset of classes. If no classes key is supplied every class will trigger this entity.\nTriggered by a player carrying some item (weapon or upgrade) or subset of items. If no equipment key is supplied every human will trigger this entity."

	// Editor color
	"editor_color" "43aa00"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var target" "[required] Must have entity to fire at. (string (target))"
	"editor_var classes" "A comma delimited list of alien classes which will trigger this entity. (builder,builderupg,level0,level1,level2,level2upg,level3,level3upg,level4)"
	"editor_var equipment" "A comma delimited list of human weapons or upgrades which will trigger this entity. (rifle,psaw,shotgun,lgun,mdriver,chaingun,flamer,prifle,lcannon, larmour,marmour,bsuit,radar,battpack,jetpack,gren,firebomb)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"
	"editor_var team" "1 for aliens, 2 for humans. Omit if you don't want to check the team. Not affected by NEGATE. (int)"
	"editor_var wait" "Time in seconds until trigger becomes re-triggerable after it's been touched. (time_2float (time [variance]), def: [0.5, 0])"

	// Property default value
	"target" ""
	"classes" ""
	"equipment" ""
	"targetname" ""
	"team" ""
	"wait" "[0.5, 0]"
}

entityDef trigger_multiple
{
	// Class
	"spawnclass" "idTrigger"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: sensor_player\n\nTriggered by a player."

	// Editor color
	"editor_color" "43aa00"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var target" "Name of the target to fire at. (string (target))"
	"editor_var targetname" "Can also be triggered as target. (string)"
	"editor_var wait" "Time in seconds until trigger becomes re-triggerable after it's been touched. (time_2float (time [variance]), def: [0.5, 0])"

	// Property default value
	"target" ""
	"targetname" ""
	"wait" "[0.5, 0]"
}

entityDef sensor_power
{
	// Class
	"spawnclass" "idTrigger"

	// Description
	"editor_usage" ""

	// Editor color
	"editor_color" "43aa00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var target" "[required] Must have entity to fire at. (string (target))"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"target" ""
	"origin" ""
}

entityDef sensor_stage
{
	// Class
	"spawnclass" "idTrigger"

	// Description
	"editor_usage" "Triggers when the team reaches the stage. Stage down doesn't trigger."

	// Editor color
	"editor_color" "43aa00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var target" "[required] Must have entity to fire at. (string (target))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var stage" "The stage at which this entity is triggered. 2nd stage is 1, 3rd is 2. (int)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"
	"editor_var team" "1 for aliens, 2 for humans. Omit if you don't want to check the team. (int)"

	// Property default value
	"target" ""
	"origin" ""
	"stage" ""
	"targetname" ""
	"team" ""
}

entityDef trigger_stage
{
	// Class
	"spawnclass" "idTrigger"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: sensor_stage\n\nTriggers when the team reaches the stage. Stage down doesn't trigger."

	// Editor color
	"editor_color" "43aa00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var target" "[required] Must have entity to fire at. (string (target))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var stage" "The stage at which this entity is triggered. 2nd stage is 1, 3rd is 2. (int)"
	"editor_var targetname" "Can also be triggered as target. (string)"
	"editor_var team" "1 for aliens, 2 for humans. Omit if you don't want to check the team. (int)"

	// Property default value
	"target" ""
	"origin" ""
	"stage" ""
	"targetname" ""
	"team" ""
}

entityDef sensor_start
{
	// Description
	"editor_usage" "Fires the targets at game start."

	// Editor color
	"editor_color" "43aa00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var target" "[required] Must have entity to fire at. (string (target))"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"target" ""
	"origin" ""
}

entityDef trigger_always
{
	// Class
	"spawnclass" "idTrigger"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: sensor_start\n\nFires the targets at game start."

	// Editor color
	"editor_color" "43aa00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var target" "[required] Must have entity to fire at. (string (target))"
	"editor_var origin" "Position. (vec3_float)"

	// Property default value
	"target" ""
	"origin" ""
}

entityDef sensor_support
{
	// Class
	"spawnclass" "idTrigger"

	// Description
	"editor_usage" "Detects creep, i.e. area where the building is allowed.\nIf condition is satisfied fires targets continuously."

	// Editor color
	"editor_color" "43aa00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var target" "[required] Must have entity to fire at. (string (target))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var team" "The only valuable value is 1, i.e. aliens. Make sure you set this. (int)"

	// Property default value
	"target" ""
	"origin" ""
	"team" ""
}

entityDef sensor_timer
{
	// Class
	"spawnclass" "idTrigger"

	// Description
	"editor_usage" "Entity continuously fires its targets after a preset time delay."

	// Editor color
	"editor_color" "43aa00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var target" "[required] Must have entity to fire at. (string (target))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"
	"editor_var wait" "Delay in seconds between each triggering of its targets. (time_2float (time [variance]))"

	// Property default value
	"target" ""
	"origin" ""
	"targetname" ""
	"wait" ""
}

entityDef func_timer
{
	// Class
	"spawnclass" "idTrigger"

	// Description
	"editor_usage" "Entity continuously fires its targets after a preset time delay."

	// Editor color
	"editor_color" "43aa00"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var target" "[required] Must have entity to fire at. (string (target))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var targetname" "Give it a name to be able to toggle its activity. (string)"
	"editor_var wait" "Delay in seconds between each triggering of its targets. (time_2float (time [variance]))"

	// Property default value
	"target" ""
	"origin" ""
	"targetname" ""
	"wait" ""
}

entityDef sfx_speaker
{
	// Class
	"spawnclass" "idSpeaker"

	// Description
	"editor_usage" "Sound generating entity.\nThe path portion value of the \"noise\" key can be replaced by the implicit folder character \"*\" for triggered sounds that belong to a particular player model. For example, if you want to create a \"bottomless pit\" in which the player screams and dies when he falls into, you would place a sensor_player over the floor of the pit and target a spx_speaker with it. Then, you would set the \"noise\" key to \"*falling1.wav\". The * character means the current player model's sound folder. So if your current player model is Granger, * = sound/player/builder, if your current player model is Battlesuit Human, * = sound/player/human_bsuit, etc. This cool feature provides an excellent way to create \"player-specific\" triggered sounds in your levels. Implies ACTIVATOR_SPEAKER on."

	// Editor color
	"editor_color" "00b3b3"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var noise" "Path/name of .wav or .ogg file. (string (sound), eg: sound/noise.wav, def: NOSOUND)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var targetname" "Can possibly be fired. (string)"
	"editor_var wait" "With nonzero variance part continuously starts sounds in parallel with delay defined by \"wait\". Otherwise makes no effect. Ignores LOOP flag. (time_2float (time [variance]))"

	// Property default value
	"noise" "NOSOUND"
	"origin" ""
	"targetname" ""
	"wait" ""
}

entityDef target_speaker
{
	// Class
	"spawnclass" "idSpeaker"

	// Deprecated
	"editor_displayFolder" "Deprecated"
	// Description
	"editor_usage" "DEPRECATED! DEPRECATED! DEPRECATED!\nRECOMMENDED TO USE: sfx_speaker\n\nSound generating entity.\nThe path portion value of the \"noise\" key can be replaced by the implicit folder character \"*\" for triggered sounds that belong to a particular player model. For example, if you want to create a \"bottomless pit\" in which the player screams and dies when he falls into, you would place a sensor_player over the floor of the pit and target a spx_speaker with it. Then, you would set the \"noise\" key to \"*falling1.wav\". The * character means the current player model's sound folder. So if your current player model is Granger, * = sound/player/builder, if your current player model is Battlesuit Human, * = sound/player/human_bsuit, etc. This cool feature provides an excellent way to create \"player-specific\" triggered sounds in your levels. Implies ACTIVATOR_SPEAKER on."

	// Editor color
	"editor_color" "00b3b3"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var noise" "Path/name of .wav or .ogg file. (string (sound), eg: sound/noise.wav, def: NOSOUND)"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var targetname" "Can possibly be fired. (string)"
	"editor_var wait" "With nonzero variance part continuously starts sounds in parallel with delay defined by \"wait\". Otherwise makes no effect. Ignores LOOP flag. (time_2float (time [variance]))"

	// Property default value
	"noise" "NOSOUND"
	"origin" ""
	"targetname" ""
	"wait" ""
}

entityDef _decal
{
	// Description
	"editor_usage" "[q3map]-only entity that specifies a decal to be projected. Should contain 1 or more patch meshes (curves) and target an pos_target entity. The distance between the center of the _decal entity and the target is the axis and distance of projection.\n"

	// Editor color
	"editor_color" "00ff00"

	// Editor sizes
	"editor_mins" "?"
	"editor_maxs" "?"

	// Property description
	"editor_var target" "Projection direction, pos_target. (string (target))"

	// Property default value
	"target" ""
}

entityDef _skybox
{
	// Description
	"editor_usage" "[q3map]-only entity. Used to make skybox with additional geometry (portal sky).\nPlace this entity into isolated box.\nMore info: http://en.wikibooks.org/wiki/Q3Map2#skybox_tutorial"

	// Editor color
	"editor_color" "4444ff"

	// Editor sizes
	"editor_mins" "-8 -8 -8"
	"editor_maxs" "8 8 8"

	// Property description
	"editor_var angle" "[q3map] Short version of \"angles\". (float (yaw))"
	"editor_var origin" "Position. (vec3_float)"
	"editor_var _scale" "[q3map] Scale skybox geometry. Can be vec3_float or just float (x=y=z=value). (vec3_float, def: 64 64 64)"
	"editor_var angles" "[q3map] Skybox geometry orientation. (vec3_float (yaw pitch roll))"

	// Property default value
	"angle" ""
	"origin" ""
	"_scale" "64 64 64"
	"angles" ""
}

