<?xml version="1.0"?>
<!-- THIS FILE IS AUTOGENERATED, DO NOT MODIFY

Unvanquished entity definitions file for level editor

License:
  Copyright (c) 2014, Daemon Developers
  All rights reserved.
  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:
   * Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.
   * Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.
   * Neither the name of the Daemon developers nor the
     names of its contributors may be used to endorse or promote products
     derived from this software without specific prior written permission.
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  DISCLAIMED. IN NO EVENT SHALL DAEMON DEVELOPERS BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS

Contributors:
  2014 neumond, Viech

Greetings:
  We thank these authors for contributing to Tremulous' entity definition file
  that was used as documentation when creating this one:
  1999 inolen, Suicide 20
  ???? Eutectic, raYGunn, ydnar
  2003 Tim Angus
  2007 Warrior
  2009 Ingar

Bugs & Feedback:
  The issue tracker for this file can be found at GitHub:
    https://github.com/Unvanquished/unvanquished-mapeditor-support/issues

  If you don't have a GitHub account, you can try to contact the recent
  contributors via the Unvanquished forums:
    https://forums.unvanquished.net
  or via the developers' chat:
    https://unvanquished.net/chat/
-->

<classes>

<group name="worldspawn" color="0 0 0">
------ DESCRIPTION ------
Only used for the world.
Entity supports [terrain] properties. They&apos;re not so useful here, but you can refer to func_group for descriptions.
------ PROPERTIES ------
<string key="BPBudgetPerMiner" name="BPBudgetPerMiner">Extra build points provided by Leeches and Drills.</string>
<string key="BPInitialBudget" name="BPInitialBudget">Initial build point budget for all teams.  OVERRIDDEN BY BPInitialBudget{Aliens|Humans}.</string>
<string key="BPInitialBudgetAliens" name="BPInitialBudgetAliens">Initial build point budget for the Alien team.  This takes precedence over BPInitialBudget for this team.</string>
<string key="BPInitialBudgetHumans" name="BPInitialBudgetHumans">Initial build point budget for the Human team.  This takes precedence over BPInitialBudget for this team.</string>
<string key="_q3map2_cmdline" name="_q3map2_cmdline"></string>
<texture key="colorGrade" name="colorGrade">or gradingTexture - Path of color grading effect (string (texture), eg: gfx/cgrading/red-only)</texture>
<string key="deluxeMapping" name="deluxeMapping">bool</string>
<string key="disabledBuildables" name="disabledBuildables">A comma delimited list of buildables to disable for this map. (eggpod,overmind,barricade,acid_tube,trapper,booster,hive,leech,telenode,mgturret, tesla,arm,medistat,drill,reactor,repeater) (string)</string>
<string key="disabledClasses" name="disabledClasses">A comma delimited list of alien classes to disable for this map. (builder,builderupg,level0,level1,level2,level2upg,level3,level3upg,level4) (string)</string>
<string key="disabledEquipment" name="disabledEquipment">A comma delimited list of human weapons or upgrades to disable for this map. (rifle,psaw,shotgun,lgun,mdriver,chaingun,flamer,prifle,lcannon, larmour,marmour,bsuit,radar,battpack,jetpack,gren,firebomb) (string)</string>
<string key="enabledust" name="enabledust"></string>
<color key="fogColor" name="fogColor">RGB (vec3_float (color))</color>
<real key="fogDensity" name="fogDensity"> (float)</real>
<real key="gravity" name="gravity" value="800">Gravity of level. (float, def: 800)</real>
<string key="hdrRGBE" name="hdrRGBE">bool</string>
<string key="mapOverBrightBits" name="mapOverBrightBits"></string>
<string key="message" name="message">Shown above loading bar. (string)</string>
<sound key="music" name="music">Path/name of looping .wav or .ogg file used for level&apos;s music. (string (sound), eg: music/sonic5.wav)</sound>
<string key="remapshader*" name="remapshader*">Remap shaders. Any property name starting with &quot;remapshader&quot; counts. Values are ; separated. (string, eg: textures/newmap/ter_rock;textures/newmap/ter_sand)</string>
<string key="reverbEffect" name="reverbEffect">Effect name. Use /testReverb &gt;TAB&lt; to view the list of possible values.</string>
<real key="reverbIntensity" name="reverbIntensity">Intensity of reverberation. (float, 0..2)</real>
<real key="_ambient" name="_ambient">[q3map] Adds a constant value to overall lighting. Use is not recommended. Ambient light will have a tendency to flatten out variations in light and shade. (float, eg: 30)</real>
<integer3 key="_blocksize" name="_blocksize" value="1024 1024 1024">[q3map] q3map always splits the BSP tree along the planes. Increase the blocksize using larger powers of 2 to reduce compile times on very large maps with a low structural brush density. (vec3_int, def: 1024 1024 1024)</integer3>
<color key="_color" name="_color" value="1 1 1">[q3map] color value for &quot;_ambient&quot;, &quot;_minvertexlight&quot;, &quot;_mingridlight&quot;. (vec3_float (color), def: 1 1 1)</color>
<string key="_farplanedist" name="_farplanedist">[q3map] Limit on how many units the vis phase of compilation can see. Used in combination with level-wide fog, it can help reduce r_speeds on large, open maps. Use with &quot;_foghull&quot;.</string>
<string key="_foghull" name="_foghull">[q3map] Shader to use for &quot;fog hull.&quot; Foghull shader should be a sky shader. Omit the &quot;textures/&quot; prefix. Use with &quot;_farplanedist&quot;.</string>
<boolean key="_keepLights" name="_keepLights" value="False">[q3map] Keep light entities in the BSP. Normally stripped out by the BSP process and read from the .map file by the lighting phase. (int, 0 or 1, def: 0)</boolean>
<real key="_mingridlight" name="_mingridlight">[q3map] &quot;_ambient&quot; for lightgrid (entity and weapon lighting). (float, eg: 30)</real>
<real key="_minlight" name="_minlight">[q3map] Shorthand for setting both &quot;_minvertexlight&quot; and &quot;_mingridlight&quot;. (float, eg: 30)</real>
<real key="_minvertexlight" name="_minvertexlight">[q3map] &quot;_ambient&quot; for vertex lighting. (float, eg: 30)</real>
<boolean key="_noshadersun" name="_noshadersun" value="False">[q3map] Ignore q3map_sun*|sun directives in sky shaders and ONLY use entity sun lights. (int, 0 or 1, def: 0)</boolean>
<string key="_style*alphagen" name="_style*alphagen">[q3map] Used for lights with &quot;style&quot; set. Star is replaced by numbers.</string>
<string key="_style*rgbgen" name="_style*rgbgen">[q3map] Used for lights with &quot;style&quot; set. Star is replaced by numbers.</string>
<real3 key="gridsize" name="gridsize">[q3map] Granularity of the lightgrid created by q3map. Values for every axis. Minimum value is 8. (vec3_float, eg: 64 64 128)</real3>
</group>

<point name="light" color="0.651 0.651 1" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Non-displayed point light source.
The -pointscale and -scale arguments to Q3Map2 affect the brightness of these lights. The -skyscale argument affects brightness of entity sun lights.
Properties for dynamic realtime lights marked as [dynamic]. Any property marked as [projected] if set makes dynamic light projected. Projected light requires most of its properties set, such as &quot;light_target&quot;, &quot;light_up&quot;, &quot;light_right&quot;.
------ SPAWNFLAGS ------
<flag key="LINEAR" name="LINEAR" bit="0">Use a linear falloff. Default is inverse distance squared (more realistic).</flag>
<flag key="ANGLE" name="ANGLE" bit="1">Force angle attenuation. Useless, &quot;_anglescale&quot; implies this flag on.</flag>
<flag key="DARKLIGHT" name="DARKLIGHT" bit="2">Unused.</flag>
<flag key="DARKLIGHT" name="DARKLIGHT" bit="3">Unused.</flag>
<flag key="NOGRIDLIGHT" name="NOGRIDLIGHT" bit="4">Do not affect the lightgrid (dynamic entity lighting).</flag>
------ PROPERTIES ------
<color key="_color" name="_color" value="1 1 1">Weighted RGB value of light color. (vec3_float (color), def: 1 1 1)</color>
<real key="light" name="light" value="300">Intensity. (float, def: 300)</real>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<targetname key="targetname" name="targetname">Setting name implies dynamic light style set. (string (targetname))</targetname>
<real3 key="light_radius" name="light_radius">[dynamic] Same as &quot;light&quot;, but allows to use different radius per axis. Dynamic lights treat &quot;light&quot; as radius. (vec3_float)</real3>
<real key="light_scale" name="light_scale">[dynamic] Intensity multiplicator. Can&apos;t be bigger than r_lightScale cvar. (float)</real>
<boolean key="noradiosity" name="noradiosity" value="False">[dynamic] Disable radiosity (lightmap) lighting. Setting this property makes the light dynamic. This enables realtime shadows. (int, 0 or 1, def: 0)</boolean>
<boolean key="noshadows" name="noshadows" value="False">[dynamic] Disable casting shadows. (int, 0 or 1, def: 0)</boolean>
<string key="rotation" name="rotation">[dynamic] 3x3 rotation matrix for frustum box. (vec9_float)</string>
<string key="texture" name="texture">[dynamic] Lighting texture.</string>
<boolean key="parallel" name="parallel" value="False">[dynamic,parallel] Make light parallel, similar to using orthogonal projection instead of usual frustum. (int, 0 or 1, def: 0)</boolean>
<real3 key="light_end" name="light_end">[dynamic,projected] Point where light must end. By default it is &quot;light_target&quot;. (vec3_float)</real3>
<real3 key="light_right" name="light_right">[dynamic,projected] Right vector. Length of vector defines the size of far frustum pyramid edge. (vec3_float)</real3>
<real3 key="light_start" name="light_start" value="0 0 0">[dynamic,projected] Point where light must start. (vec3_float, def: 0 0 0)</real3>
<real3 key="light_target" name="light_target">[dynamic,projected] Direction vector. Length of vector defines frustum pyramid height. (vec3_float)</real3>
<real3 key="light_up" name="light_up">[dynamic,projected] Up vector. Length of vector defines the size of far frustum pyramid edge. (vec3_float)</real3>
<string key="_anglescale" name="_anglescale">[q3map] Angle attenuation coefficient for spotlights (those having target).</string>
<real key="_deviance" name="_deviance" value="0">[q3map] Used in pair with _samples. Jitter radius for array of lights. (float, def: 0)</real>
<real key="_filterradius" name="_filterradius" value="0">[q3map] No attenuation within _filterradius sphere. (float, def: 0)</real>
<integer key="_samples" name="_samples" value="1">[q3map] Used for light jitter in pair with _deviance. Number of lights created near each other instead of the sole light source. Sum of all intensities equals to original light intensity. (int, def: 1)</integer>
<boolean key="_sun" name="_sun" value="False">[q3map] Set this key on a spotlight (those having &quot;target&quot;) to make an infinite sun light. This can be used instead of q3map_skylight shader directive. Properties remaining useful are &quot;target&quot;, &quot;_color&quot;, &quot;_deviance&quot;, &quot;_samples&quot;, &quot;style&quot;. (int, 0 or 1, def: 0)</boolean>
<real key="fade" name="fade" value="1">[q3map] Linear (only linear) light attenuation coefficient, less value - far the light goes. (float, def: 1)</real>
<real key="radius" name="radius" value="64">[q3map] Overrides the default 64 unit Radius of a spotlight at the target point. (float, def: 64)</real>
<real key="scale" name="scale" value="1">[q3map] Scales intensity, from SOF2/JK2. Eg. light=300, scale=0.2 will result in light=60 (float, def: 1)</real>
<integer key="style" name="style" value="0">[q3map] Used for blinking lights. Number used to choose proper worldspawn entity keys with formulas. Key names are _style*rgbgen and _style*alphagen where * is replaced by style number. Read more here http://q3map2.robotrenegade.com/docs/shader_manual/lightstyles.html (int, def: 0)</integer>
<target key="target" name="target">[q3map] Lights pointed at a target will be spotlights. (string (target))</target>
</point>

<point name="lightJunior" color="0 0.702 0.298" box="-6 -6 -6 6 6 6">
------ DESCRIPTION ------
Non-displayed point light source. Unlike usual light affects only entities (lightgrid).
The -pointscale and -scale arguments to Q3Map2 affect the brightness of these lights. The -skyscale argument affects brightness of entity sun lights.
------ SPAWNFLAGS ------
<flag key="LINEAR" name="LINEAR" bit="0">Use a linear falloff. Default is inverse distance squared (more realistic).</flag>
<flag key="ANGLE" name="ANGLE" bit="1">Force angle attenuation. Useless, &quot;_anglescale&quot; implies this flag on.</flag>
------ PROPERTIES ------
<color key="_color" name="_color" value="1 1 1">Weighted RGB value of light color. (vec3_float (color), def: 1 1 1)</color>
<real key="light" name="light" value="300">Intensity. (float, def: 300)</real>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<real key="radius" name="radius" value="64">Overrides the default 64 unit Radius of a spotlight at the target point. (float, def: 64)</real>
<string key="_anglescale" name="_anglescale">[q3map] Angle attenuation coefficient for spotlights (those having target).</string>
<real key="_deviance" name="_deviance" value="0">[q3map] Used in pair with _samples. Jitter radius for array of lights. (float, def: 0)</real>
<real key="_filterradius" name="_filterradius" value="0">[q3map] No attenuation within _filterradius sphere. (float, def: 0)</real>
<integer key="_samples" name="_samples" value="1">[q3map] Used for light jitter in pair with _deviance. Number of lights created near each other instead of the sole light source. Sum of all intensities equals to original light intensity. (int, def: 1)</integer>
<real key="fade" name="fade" value="1">[q3map] Linear (only linear) light attenuation coefficient, less value - far the light goes. (float, def: 1)</real>
<real key="scale" name="scale" value="1">[q3map] Scales intensity, from SOF2/JK2. Eg. light=300, scale=0.2 will result in light=60 (float, def: 1)</real>
<target key="target" name="target">[q3map] Lights pointed at a target will be spotlights. (string (target))</target>
</point>

<group name="func_bobbing" color="0 0.498 0.8">
------ DESCRIPTION ------
Solid entity that oscillates back and forth in a linear motion. Entity bobs on the Z axis (up-down) by default.
For &quot;_celshader&quot; read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html
Entity supports [terrain] properties. They&apos;re not so useful here, but you can refer to func_group for descriptions.
------ SPAWNFLAGS ------
<flag key="X_AXIS" name="X_AXIS" bit="0">Entity will bob along the X axis.</flag>
<flag key="Y_AXIS" name="Y_AXIS" bit="1">Entity will bob along the Y axis.</flag>
------ PROPERTIES ------
<color key="color" name="color" value="1 1 1">Colour of emitted light. Emission activated by either color or light set. Don&apos;t forget to set origin. (vec3_float (color), def: 1 1 1)</color>
<integer key="dmg" name="dmg" value="2">Damage dealt when blocked. (int, def: 2)</integer>
<string key="group" name="group">Name of entity group. Allows to activate all entities of group at once.</string>
<real key="height" name="height" value="32">Amount of travel of the oscillation movement. (float, def: 32)</real>
<real key="light" name="light" value="100">Light emitting intensity. Emission activated by either color or light set. Don&apos;t forget to set origin. (float, def: 100)</real>
<model key="model2" name="model2">Path to custom model attached to entity. Don&apos;t forget to set &quot;origin&quot;. (string (model))</model>
<sound key="noise" name="noise">Sound played when activated via targetname. Emitted at origin. (string (sound))</sound>
<real3 key="origin" name="origin">&quot;model2&quot; position. (vec3_float)</real3>
<real key="phase" name="phase" value="0">Sets the start offset of the oscillation cycle. (float, 0..1, def: 0)</real>
<real key="speed" name="speed" value="4">Amount of time in seconds for one complete oscillation cycle. (float, def: 4)</real>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
<string key="_celshader" name="_celshader">[q3map] Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)</string>
<integer key="_cs" name="_cs">[q3map] or &quot;_castShadows&quot;. Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)</integer>
<real key="_lightmapscale" name="_lightmapscale" value="1">[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)</real>
<integer key="_rs" name="_rs">[q3map] or &quot;_receiveShadows&quot;. Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)</integer>
</group>

<group name="func_button" color="0 0.498 0.8">
------ DESCRIPTION ------
When a button is touched by a player, it moves in the direction set by the &quot;angle&quot; key, triggers all its targets, stays pressed by an amount of time set by the &quot;wait&quot; key, then returns to it&apos;s original position where it can be operated again.
For &quot;_celshader&quot; read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html
Entity supports [terrain] properties. They&apos;re not so useful here, but you can refer to func_group for descriptions.
------ SPAWNFLAGS ------
<flag key="ACTIVATE" name="ACTIVATE" bit="7">The button may be operated with the &quot;use&quot; key (+activate).</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Must have entity to fire at. (string (target))</target>
<angle key="angle" name="angle">Determines moving direction of button (around Z axis: 0=+x, 90=+y, 180=-x, 270=-y; special values: up = -1, down = -2). (float (yaw), -2..360)</angle>
<color key="color" name="color" value="1 1 1">Colour of emitted light. Emission activated by either color or light set. Don&apos;t forget to set origin. (vec3_float (color), def: 1 1 1)</color>
<string key="group" name="group">Name of entity group. Allows to activate all entities of group at once.</string>
<boolean key="health" name="health" value="False">If set, the button must take damage (any amount) to activate. (int, 0 or 1, def: 0)</boolean>
<real key="light" name="light" value="100">Light emitting intensity. Emission activated by either color or light set. Don&apos;t forget to set origin. (float, def: 100)</real>
<real key="lip" name="lip" value="4">When 0, button displacement = button&apos;s size in direction of movement. Positive lip value discreases displacement, leaving lip remaining at the end of move. (float, def: 4)</real>
<model key="model2" name="model2">Path to custom model attached to entity. Don&apos;t forget to set &quot;origin&quot;. (string (model))</model>
<real3 key="origin" name="origin">&quot;model2&quot; position. (vec3_float)</real3>
<sound key="sound1to2" name="sound1to2" value="sound/movers/switches/button1.wav">Activation sound. (string (sound), eg: sound/dum.ogg, def: sound/movers/switches/button1.wav)</sound>
<real key="speed" name="speed">Determines how fast the button moves. (float)</real>
<string key="wait" name="wait">Number of seconds button stays pressed. -1 = return immediately. (time_2float (time [variance]))</string>
<string key="_celshader" name="_celshader">[q3map] Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)</string>
<integer key="_cs" name="_cs">[q3map] or &quot;_castShadows&quot;. Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)</integer>
<real key="_lightmapscale" name="_lightmapscale" value="1">[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)</real>
<integer key="_rs" name="_rs">[q3map] or &quot;_receiveShadows&quot;. Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)</integer>
</group>

<group name="func_destructable" color="0 0.498 0.8">
------ DESCRIPTION ------
Destructable object. You can destroy this object in game. When destructed deals splash damage to everyone near it. Does not cause splash damage to buildables.
For &quot;_celshader&quot; read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html
Entity supports [terrain] properties. They&apos;re not so useful here, but you can refer to func_group for descriptions.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Hidden by default. Can be shown via activation as target.</flag>
------ PROPERTIES ------
<integer key="damage" name="damage" value="0">Splash damage caused when destroyed. (int, def: 0)</integer>
<integer key="health" name="health" value="100">Amount of damage needed to destroy this. (int, def: 100)</integer>
<target key="onDie" name="onDie">Name of the target fired when destroyed. (string (target))</target>
<integer key="radius" name="radius" value="0">Splash damage radius. (int, def: 0)</integer>
<targetname key="targetname" name="targetname">Can be toggled as target. Causes object to appear or disappear. Even after being destructed object can appear again. (string (targetname))</targetname>
<string key="_celshader" name="_celshader">[q3map] Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)</string>
<integer key="_cs" name="_cs">[q3map] or &quot;_castShadows&quot;. Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)</integer>
<real key="_lightmapscale" name="_lightmapscale" value="1">[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)</real>
<integer key="_rs" name="_rs">[q3map] or &quot;_receiveShadows&quot;. Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)</integer>
</group>

<group name="func_door" color="0 0.498 0.8">
------ DESCRIPTION ------
Normal sliding door entity. By default, the door will activate when player walks close (&quot;range&quot;) to it or when damage is inflicted (&quot;health&quot;) to it.
For &quot;_celshader&quot; read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html
Entity supports [terrain] properties. They&apos;re not so useful here, but you can refer to func_group for descriptions.
------ SPAWNFLAGS ------
<flag key="START_OPEN" name="START_OPEN" bit="0">The door will spawn in the open state and operate in reverse.</flag>
<flag key="CRUSHER" name="CRUSHER" bit="2">Door will not reverse direction when blocked and will keep damaging player or building until it dies or gets out of the way.</flag>
<flag key="ACTIVATE" name="ACTIVATE" bit="7">The door may be operated with the &quot;use&quot; key (+activate).</flag>
<flag key="TOGGLE" name="TOGGLE" bit="8">This door will not close until triggered a second time.
Requires one or both of the following:
1. &quot;targetname&quot; to be set and to have a valid trigger.
2. To have the ACTIVATE flag set.</flag>
------ PROPERTIES ------
<angle key="angle" name="angle">Determines moving direction of door (around Z axis: 0=+x, 90=+y, 180=-x, 270=-y; special values: up = -1, down = -2). (float (yaw))</angle>
<color key="color" name="color" value="1 1 1">Colour of emitted light. Emission activated by either color or light set. Don&apos;t forget to set origin. (vec3_float (color), def: 1 1 1)</color>
<integer key="dmg" name="dmg" value="2">Damage to inflict on player when he blocks operation of door. Door will reverse direction when blocked unless CRUSHER spawnflag is set. (int, def: 2)</integer>
<string key="group" name="group">Name of entity group. Allows to activate all entities of group at once.</string>
<boolean key="health" name="health" value="False">If set, the door must take damage (any amount) to activate. (int, 0 or 1, def: 0)</boolean>
<real key="light" name="light" value="100">Light emitting intensity. Emission activated by either color or light set. Don&apos;t forget to set origin. (float, def: 100)</real>
<real key="lip" name="lip" value="8">When 0, door displacement = door&apos;s size in direction of movement. Positive lip value discreases displacement, leaving lip remaining at the end of move. (float, def: 8)</real>
<model key="model2" name="model2">Path to custom model attached to entity. Don&apos;t forget to set &quot;origin&quot;. (string (model))</model>
<real3 key="origin" name="origin">&quot;model2&quot; position. (vec3_float)</real3>
<integer key="range" name="range" value="72">Door triggering range. (int, def: 72)</integer>
<sound key="sound1to2" name="sound1to2">The sound played on start moving from state 1 to state 2. (string (sound))</sound>
<sound key="sound2to1" name="sound2to1">The sound played on start moving from state 2 to state 1. (string (sound))</sound>
<sound key="soundPos1" name="soundPos1">The sound played reached state 1. (string (sound))</sound>
<sound key="soundPos2" name="soundPos2">The sound played reached state 2. (string (sound))</sound>
<real key="speed" name="speed" value="400">Determines how fast the door moves. (float, def: 400)</real>
<targetname key="targetname" name="targetname">If set, a func_button or trigger is required to activate the door. Overrides activation by damage. (string (targetname))</targetname>
<string key="wait" name="wait">Number of seconds before brush returns. -1 = return immediately. (time_2float (time [variance]))</string>
<string key="_celshader" name="_celshader">[q3map] Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)</string>
<integer key="_cs" name="_cs">[q3map] or &quot;_castShadows&quot;. Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)</integer>
<real key="_lightmapscale" name="_lightmapscale" value="1">[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)</real>
<integer key="_rs" name="_rs">[q3map] or &quot;_receiveShadows&quot;. Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)</integer>
</group>

<group name="func_door_model" color="0 0.498 0.8">
------ DESCRIPTION ------
A model based door entity. By default, the door will activate when player walks close to it. The opening and closing of the door is provided by an animation in the model itself.
Every func_door_model needs its model to be positioned, scaled and orientated using the modelOrigin, scale and angle/angles keys repsectively.
------ SPAWNFLAGS ------
<flag key="ACTIVATE" name="ACTIVATE" bit="7">The door may be operated with the &quot;use&quot; key (+activate).</flag>
<flag key="TOGGLE" name="TOGGLE" bit="8">This door will not close until triggered a second time.
Requires one or both of the following:
1. &quot;targetname&quot; to be set and to have a valid trigger.
2. To have the ACTIVATE flag set.</flag>
------ PROPERTIES ------
<model key="model2" name="model2">[required] The door model. (string (model), eg: models/mapobjects/pipe/pipe02.md3)</model>
<real3 key="modelOrigin" name="modelOrigin" value="0 0 0">[required] &quot;model2&quot; position. (vec3_float, def: 0 0 0)</real3>
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">Model orientation. (vec3_float (yaw pitch roll))</angles>
<integer2 key="animation" name="animation">The first frame and number of frames in the door open animation. This will be reversed for the close animation. (vec2_int, eg: [0, 10])</integer2>
<color key="color" name="color" value="1 1 1">Colour of emitted light. Emission activated by either color or light set. Don&apos;t forget to set origin. (vec3_float (color), def: 1 1 1)</color>
<integer key="health" name="health">If set, the door must take damage (any amount) to activate. (int)</integer>
<real key="light" name="light" value="100">Light emitting intensity. Emission activated by either color or light set. Don&apos;t forget to set origin. (float, def: 100)</real>
<sound key="noise" name="noise">The sound played repeatedly while door is moving. (string (sound))</sound>
<real3 key="origin" name="origin">Entity position point. (vec3_float)</real3>
<integer key="range" name="range" value="72">Door triggering range. (int, def: 72)</integer>
<real3 key="scale" name="scale" value="1 1 1">Model scale factors for each axis. (vec3_float, def: 1 1 1)</real3>
<sound key="sound1to2" name="sound1to2">The sound played on start moving from state 1 to state 2. (string (sound))</sound>
<sound key="sound2to1" name="sound2to1">The sound played on start moving from state 2 to state 1. (string (sound))</sound>
<sound key="soundPos1" name="soundPos1">The sound played reached state 1. (string (sound))</sound>
<sound key="soundPos2" name="soundPos2">The sound played reached state 2. (string (sound))</sound>
<real key="speed" name="speed" value="200">The time taken for the door to change state in msec. (float, def: 200)</real>
<targetname key="targetname" name="targetname">If set, a func_button or trigger is required to activate the door. Overrides activation by damage. (string (targetname))</targetname>
<real key="wait" name="wait" value="2">Number of seconds before door returns. (float, def: 2)</real>
</group>

<group name="func_door_rotating" color="0 0.498 0.8">
------ DESCRIPTION ------
Rotating door entity. By default, the door will activate when player walks close to it.
Rotating door will not cause damage to player when blocked.
When activated turns around the rotation axis (&quot;origin&quot;) to angle (&quot;rotatorAngle&quot;) with &quot;speed&quot;, then stops. After &quot;wait&quot; time door starts turning back.
For &quot;_celshader&quot; read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html
Entity supports [terrain] properties. They&apos;re not so useful here, but you can refer to func_group for descriptions.
------ SPAWNFLAGS ------
<flag key="START_OPEN" name="START_OPEN" bit="0">the door will spawn in the open state and operate in reverse.</flag>
<flag key="CRUSHER" name="CRUSHER" bit="2">Door will not reverse direction when blocked and will keep damaging player or building until it dies or gets out of the way.</flag>
<flag key="REVERSE" name="REVERSE" bit="3">the door will open the other way.</flag>
<flag key="X_AXIS" name="X_AXIS" bit="5">rotate around the X axis instead of the Z.</flag>
<flag key="Y_AXIS" name="Y_AXIS" bit="6">rotate around the Y axis instead of the Z.</flag>
<flag key="ACTIVATE" name="ACTIVATE" bit="7">The door may be operated with the &quot;use&quot; key (+activate).</flag>
<flag key="TOGGLE" name="TOGGLE" bit="8">This door will not close until triggered a second time.
Requires one or both of the following:
1. &quot;targetname&quot; to be set and to have a valid trigger.
2. To have the ACTIVATE flag set.</flag>
------ PROPERTIES ------
<real3 key="origin" name="origin">[required] Rotation axis position. (vec3_float)</real3>
<color key="color" name="color" value="1 1 1">Colour of emitted light. Emission activated by either color or light set. Don&apos;t forget to set origin. (vec3_float (color), def: 1 1 1)</color>
<string key="group" name="group">Name of entity group. Allows to activate all entities of group at once.</string>
<boolean key="health" name="health" value="False">If set, the door must take damage (any amount) to activate. (int, 0 or 1, def: 0)</boolean>
<real key="light" name="light" value="100">Light emitting intensity. Emission activated by either color or light set. Don&apos;t forget to set origin. (float, def: 100)</real>
<model key="model2" name="model2">Path to custom model attached to entity. Don&apos;t forget to set &quot;origin&quot;. (string (model))</model>
<sound key="noise" name="noise">The sound played repeatedly while door is moving. (string (sound))</sound>
<real key="rotatorAngle" name="rotatorAngle" value="90">The number of degrees through which to rotate. (float, def: 90)</real>
<sound key="sound1to2" name="sound1to2">The sound played on start moving from state 1 to state 2. (string (sound))</sound>
<sound key="sound2to1" name="sound2to1">The sound played on start moving from state 2 to state 1. (string (sound))</sound>
<sound key="soundPos1" name="soundPos1">The sound played reached state 1. (string (sound))</sound>
<sound key="soundPos2" name="soundPos2">The sound played reached state 2. (string (sound))</sound>
<real key="speed" name="speed">Determines how fast the door moves, in degrees/second. (float)</real>
<targetname key="targetname" name="targetname">If set, a func_button or trigger is required to activate the door. (string (targetname))</targetname>
<real key="wait" name="wait" value="2">Number of seconds before door returns. -1 = return immediately. (float, def: 2)</real>
<string key="_celshader" name="_celshader">[q3map] Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)</string>
<integer key="_cs" name="_cs">[q3map] or &quot;_castShadows&quot;. Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)</integer>
<real key="_lightmapscale" name="_lightmapscale" value="1">[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)</real>
<integer key="_rs" name="_rs">[q3map] or &quot;_receiveShadows&quot;. Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)</integer>
</group>

<group name="func_dynamic" color="0 0.498 0.8">
------ DESCRIPTION ------
Do not use.
For &quot;_celshader&quot; read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html
Entity supports [terrain] properties. They&apos;re not so useful here, but you can refer to func_group for descriptions.
------ PROPERTIES ------
<color key="color" name="color" value="1 1 1">Colour of emitted light. Emission activated by either color or light set. Don&apos;t forget to set origin. (vec3_float (color), def: 1 1 1)</color>
<string key="group" name="group">Name of entity group. Allows to activate all entities of group at once.</string>
<real key="light" name="light" value="100">Light emitting intensity. Emission activated by either color or light set. Don&apos;t forget to set origin. (float, def: 100)</real>
<model key="model2" name="model2">Path to custom model attached to entity. Don&apos;t forget to set &quot;origin&quot;. (string (model))</model>
<real3 key="origin" name="origin">&quot;model2&quot; position. (vec3_float)</real3>
<targetname key="targetname" name="targetname">Can possibly be fired. (string (targetname))</targetname>
<string key="_celshader" name="_celshader">[q3map] Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)</string>
<integer key="_cs" name="_cs">[q3map] or &quot;_castShadows&quot;. Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)</integer>
<real key="_lightmapscale" name="_lightmapscale" value="1">[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)</real>
<integer key="_rs" name="_rs">[q3map] or &quot;_receiveShadows&quot;. Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)</integer>
</group>

<group name="func_group" color="0 0.498 0.8">
------ DESCRIPTION ------
This is not an entity as such. It is strictly an editor utility to group world brushes and patches together for convenience (selecting, moving, copying, etc). You cannot group entities with this.
The TAB key can be used to flip through the component pieces of a selected func_group entity, isolating individual components.

For &quot;_celshader&quot; read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html
For [terrain] read http://icculus.org/gtkradiant/documentation/Terrain_Manual/start.html [terrain] is done entirely by [q3map]. Don&apos;t forget to set q3map_indexmap in shader.
------ PROPERTIES ------
<string key="_celshader" name="_celshader">[q3map] Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)</string>
<integer key="_cs" name="_cs">[q3map] or &quot;_castShadows&quot;. Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)</integer>
<real key="_lightmapscale" name="_lightmapscale" value="1">[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)</real>
<integer key="_rs" name="_rs">[q3map] or &quot;_receiveShadows&quot;. Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)</integer>
<string key="_indexmap" name="_indexmap">[terrain] Path to index-colour image representing placement of different textures. (string, eg: maps/indexmap.pcx)</string>
<integer key="_layers" name="_layers">[terrain] Count of terrain textures. Should be equal to count of colours in indexmap palette. (int, eg: 3)</integer>
<string key="_offsets" name="_offsets">[terrain] Height offset for each layer. (float_array)</string>
<string key="_shader" name="_shader">[terrain] Name of metashader. Template for indexed shader names. Note: omit the &quot;textures/&quot; prefix. (string, eg: mymap/terrain)</string>
</group>

<group name="func_pendulum" color="0 0.498 0.8">
------ DESCRIPTION ------
Solid entity that describes a pendulum back and forth rotation movement. Rotates on the X axis by default. Pendulum frequency is a physical constant based on the length of the beam and gravity. Blocking the pendulum instantly kills a player.
The speed of swing (frequency) is not adjustable.
For &quot;_celshader&quot; read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html
Entity supports [terrain] properties. They&apos;re not so useful here, but you can refer to func_group for descriptions.
------ PROPERTIES ------
<real3 key="origin" name="origin" value="0 0 0">[required] Rotation axis position. (vec3_float, def: 0 0 0)</real3>
<angle key="angle" name="angle" value="0">Short version of &quot;angles&quot;. (float (yaw), -180..180, def: 0)</angle>
<angles key="angles" name="angles" value="0 0 0">Orienting pendulum. (vec3_float (yaw pitch roll), def: 0 0 0)</angles>
<color key="color" name="color" value="1 1 1">Colour of emitted light. Emission activated by either color or light set. Don&apos;t forget to set origin. (vec3_float (color), def: 1 1 1)</color>
<integer key="dmg" name="dmg" value="2">Damage dealt when blocked. (int, def: 2)</integer>
<string key="group" name="group">Name of entity group. Allows to activate all entities of group at once.</string>
<real key="light" name="light" value="100">Light emitting intensity. Emission activated by either color or light set. Don&apos;t forget to set origin. (float, def: 100)</real>
<model key="model2" name="model2">Path to custom model attached to entity. Don&apos;t forget to set &quot;origin&quot;. (string (model))</model>
<sound key="noise" name="noise">Sound played when activated via targetname. Emitted at origin. (string (sound))</sound>
<real key="phase" name="phase" value="0">Sets the start offset of the swinging cycle. (float, 0..1, def: 0)</real>
<real key="speed" name="speed" value="30">Angle of swing arc in either direction from initial position. (float, def: 30)</real>
<targetname key="targetname" name="targetname">Doesn&apos;t work properly. (string (targetname))</targetname>
<string key="_celshader" name="_celshader">[q3map] Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)</string>
<integer key="_cs" name="_cs">[q3map] or &quot;_castShadows&quot;. Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)</integer>
<real key="_lightmapscale" name="_lightmapscale" value="1">[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)</real>
<integer key="_rs" name="_rs">[q3map] or &quot;_receiveShadows&quot;. Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)</integer>
</group>

<group name="func_plat" color="0 0.498 0.8">
------ DESCRIPTION ------
Rising platform the player can ride to reach higher places. Plats must always be drawn in the raised position, so they will operate and be lighted correctly but they spawn in the lowered position.
The plat will stay in the raised position until the player steps off.
For &quot;_celshader&quot; read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html
Entity supports [terrain] properties. They&apos;re not so useful here, but you can refer to func_group for descriptions.
------ SPAWNFLAGS ------
<flag key="DONT_WAIT" name="DONT_WAIT" bit="0">The platform will not wait for a client to leave before returning to its original position.</flag>
<flag key="CRUSHER" name="CRUSHER" bit="2">Door will not reverse direction when blocked and will keep damaging player or building until it dies or gets out of the way.</flag>
------ PROPERTIES ------
<color key="color" name="color" value="1 1 1">Colour of emitted light. Emission activated by either color or light set. Don&apos;t forget to set origin. (vec3_float (color), def: 1 1 1)</color>
<integer key="dmg" name="dmg" value="2">Damage dealt when blocked. (int, def: 2)</integer>
<string key="group" name="group">Name of entity group. Allows to activate all entities of group at once.</string>
<real key="height" name="height" value="0">If set, this will determine the total amount of vertical travel of the plat. Place plat at the top point. In game it will spawn at bottom. Overrides &quot;lip&quot; option. (float, def: 0)</real>
<real key="light" name="light" value="100">Light emitting intensity. Emission activated by either color or light set. Don&apos;t forget to set origin. (float, def: 100)</real>
<real key="lip" name="lip" value="8">When 0, plat displacement = plat&apos;s size in direction of movement. Positive lip value discreases displacement, leaving lip remaining at the end of move. Can be overridden by &quot;height&quot;. If you use lip place your plat near the bottom point. (float, def: 8)</real>
<model key="model2" name="model2">Path to custom model attached to entity. Don&apos;t forget to set &quot;origin&quot;. (string (model))</model>
<sound key="noise" name="noise">The sound played repeatedly while plat is moving. (string (sound))</sound>
<real3 key="origin" name="origin">&quot;model2&quot; position. (vec3_float)</real3>
<sound key="sound1to2" name="sound1to2">The sound played on start moving from state 1 to state 2. (string (sound))</sound>
<sound key="sound2to1" name="sound2to1">The sound played on start moving from state 2 to state 1. (string (sound))</sound>
<sound key="soundPos1" name="soundPos1">The sound played reached state 1. (string (sound))</sound>
<sound key="soundPos2" name="soundPos2">The sound played reached state 2. (string (sound))</sound>
<real key="speed" name="speed" value="400">Determines how fast the plat moves. (float, def: 400)</real>
<targetname key="targetname" name="targetname">If set, the trigger that points to this will raise the plat each time it fires. The plat raises and comes back down a second later if no player is on it. (string (targetname))</targetname>
<string key="_celshader" name="_celshader">[q3map] Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)</string>
<integer key="_cs" name="_cs">[q3map] or &quot;_castShadows&quot;. Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)</integer>
<real key="_lightmapscale" name="_lightmapscale" value="1">[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)</real>
<integer key="_rs" name="_rs">[q3map] or &quot;_receiveShadows&quot;. Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)</integer>
</group>

<group name="func_rotating" color="0 0.498 0.8">
------ DESCRIPTION ------
Solid entity that rotates continuously. Rotates on the Z axis by default.
For &quot;_celshader&quot; read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html
Entity supports [terrain] properties. They&apos;re not so useful here, but you can refer to func_group for descriptions.
------ SPAWNFLAGS ------
<flag key="X_AXIS" name="X_AXIS" bit="2">Entity will rotate around the X axis.</flag>
<flag key="Y_AXIS" name="Y_AXIS" bit="3">Entity will rotate around the Y axis.</flag>
------ PROPERTIES ------
<real3 key="origin" name="origin">[required] Rotation axis position. (vec3_float)</real3>
<real key="speed" name="speed" value="400">[required] Determines how fast entity rotates. (float, def: 400)</real>
<color key="color" name="color" value="1 1 1">Colour of emitted light. Emission activated by either color or light set. Don&apos;t forget to set origin. (vec3_float (color), def: 1 1 1)</color>
<integer key="dmg" name="dmg" value="2">Damage dealt when blocked. (int, def: 2)</integer>
<string key="group" name="group">Name of entity group. Allows to activate all entities of group at once.</string>
<real key="light" name="light" value="100">Light emitting intensity. Emission activated by either color or light set. Don&apos;t forget to set origin. (float, def: 100)</real>
<model key="model2" name="model2">Path to custom model attached to entity. Don&apos;t forget to set &quot;origin&quot;. (string (model))</model>
<sound key="noise" name="noise">Sound played when activated via targetname. Emitted at origin. (string (sound))</sound>
<targetname key="targetname" name="targetname">Doesn&apos;t work properly. (string (targetname))</targetname>
<string key="_celshader" name="_celshader">[q3map] Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)</string>
<integer key="_cs" name="_cs">[q3map] or &quot;_castShadows&quot;. Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)</integer>
<real key="_lightmapscale" name="_lightmapscale" value="1">[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)</real>
<integer key="_rs" name="_rs">[q3map] or &quot;_receiveShadows&quot;. Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)</integer>
</group>

<group name="func_spawn" color="0 0.498 0.8">
------ DESCRIPTION ------
Toggleable wall.
For &quot;_celshader&quot; read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html
Entity supports [terrain] properties. They&apos;re not so useful here, but you can refer to func_group for descriptions.
------ SPAWNFLAGS ------
<flag key="SPAWN_ENABLED" name="SPAWN_ENABLED" bit="0">By default brush is present in level.</flag>
<flag key="DONT_KILL" name="DONT_KILL" bit="1">Disable killing on appearing.</flag>
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<string key="_celshader" name="_celshader">[q3map] Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)</string>
<integer key="_cs" name="_cs">[q3map] or &quot;_castShadows&quot;. Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)</integer>
<real key="_lightmapscale" name="_lightmapscale" value="1">[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)</real>
<integer key="_rs" name="_rs">[q3map] or &quot;_receiveShadows&quot;. Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)</integer>
</group>

<group name="func_static" color="0 0.498 0.8">
------ DESCRIPTION ------
Static non-solid bspmodel.
Used to add colour grading and reverb effects to specific area.
For &quot;_celshader&quot; read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html
Entity supports [terrain] properties. They&apos;re not so useful here, but you can refer to func_group for descriptions.
------ PROPERTIES ------
<color key="color" name="color" value="1 1 1">Colour of emitted light. Emission activated by either color or light set. Don&apos;t forget to set origin. (vec3_float (color), def: 1 1 1)</color>
<real key="gradingDistance" name="gradingDistance" value="250">Distance where grading effect appears. (float, def: 250)</real>
<texture key="gradingTexture" name="gradingTexture">If set, there is the grading effect fluently appears when player comes closer. (string (texture))</texture>
<string key="group" name="group">Name of entity group. Allows to activate all entities of group at once.</string>
<real key="light" name="light" value="100">Light emitting intensity. Emission activated by either color or light set. Don&apos;t forget to set origin. (float, def: 100)</real>
<model key="model2" name="model2">Path to custom model attached to entity. Don&apos;t forget to set &quot;origin&quot;. (string (model))</model>
<real3 key="origin" name="origin">&quot;model2&quot; position. (vec3_float)</real3>
<real key="reverbDistance" name="reverbDistance" value="250">Distance where reverb effect appears. (float, def: 250)</real>
<string key="reverbEffect" name="reverbEffect">Effect name. Use /testReverb &gt;TAB&lt; to view the list of possible values. (string)</string>
<real key="reverbIntensity" name="reverbIntensity" value="1">Intensity of reverberation. (float, def: 1)</real>
<targetname key="targetname" name="targetname">Can possibly be fired. (string (targetname))</targetname>
<string key="_celshader" name="_celshader">[q3map] Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)</string>
<integer key="_cs" name="_cs">[q3map] or &quot;_castShadows&quot;. Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)</integer>
<real key="_lightmapscale" name="_lightmapscale" value="1">[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)</real>
<integer key="_rs" name="_rs">[q3map] or &quot;_receiveShadows&quot;. Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)</integer>
</group>

<group name="func_train" color="0 0.498 0.8">
------ DESCRIPTION ------
Trains are moving solids that follow a string of path_corner entities.
Trains instakill anything in their path by default (unless BLOCK_STOPS set).
When BLOCK_STOPS is set, trains cannot be stopped just by getting in their way, the player must be wedged between the train and another obstacle to block it.
You must set proper &quot;origin&quot; coordinates. It used as base point for train brush. That base point moves over path_corners, i.e. you can shift the train off the path.
For &quot;_celshader&quot; read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html
Entity supports [terrain] properties. They&apos;re not so useful here, but you can refer to func_group for descriptions.
------ SPAWNFLAGS ------
<flag key="START_OFF" name="START_OFF" bit="0">The train will spawn in the off state</flag>
<flag key="BLOCK_STOPS" name="BLOCK_STOPS" bit="1">Train simply stops if blocked, instead of killing.</flag>
------ PROPERTIES ------
<real3 key="origin" name="origin">[required] Base position of train. (vec3_float)</real3>
<target key="target" name="target">[required] This points to the first path_corner of the path which is also location of the train&apos;s origin. (string (target))</target>
<color key="color" name="color" value="1 1 1">Colour of emitted light. Emission activated by either color or light set. Don&apos;t forget to set origin. (vec3_float (color), def: 1 1 1)</color>
<integer key="dmg" name="dmg" value="2">Unused. (int, def: 2)</integer>
<string key="group" name="group">Name of entity group. Allows to activate all entities of group at once.</string>
<real key="light" name="light" value="100">Light emitting intensity. Emission activated by either color or light set. Don&apos;t forget to set origin. (float, def: 100)</real>
<model key="model2" name="model2">Path to custom model attached to entity. Don&apos;t forget to set &quot;origin&quot;. (string (model))</model>
<real key="speed" name="speed" value="100">Determines how fast the train moves. Can be overridden by path_corner speed. (float, def: 100)</real>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
<string key="_celshader" name="_celshader">[q3map] Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)</string>
<integer key="_cs" name="_cs">[q3map] or &quot;_castShadows&quot;. Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)</integer>
<real key="_lightmapscale" name="_lightmapscale" value="1">[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)</real>
<integer key="_rs" name="_rs">[q3map] or &quot;_receiveShadows&quot;. Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)</integer>
</group>

<point name="path_corner" color="0.498 0.298 0" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Path corner entity that func_trains can be made to follow.
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for aiming. (string (targetname))</targetname>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<real key="speed" name="speed">Speed of func_train while moving to the next path corner. This will override the speed value of the train. (float)</real>
<target key="target" name="target">Point to next path_corner in the path. (string (target))</target>
<real key="wait" name="wait" value="0">Number of seconds func_train will pause on path corner before moving to next path corner. (float, def: 0)</real>
</point>

<point name="pos_alien_intermission" color="1 0.2 0" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Point where camera will hang when player awaits spawn as alien. There can be many of them, game makes random choice.
------ PROPERTIES ------
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">Orientation. (vec3_float (yaw pitch roll))</angles>
<target key="onSpawn" name="onSpawn">Name of the target fired when player comes to the intermission view. (string (target))</target>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<target key="target" name="target">Alternative way to set orientation. (string (target))</target>
<targetname key="targetname" name="targetname">Can possibly be fired. (string (targetname))</targetname>
</point>

<point name="info_alien_intermission" color="1 0.2 0" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: pos_alien_intermission
------ DESCRIPTION ------
Point where camera will hang when player awaits spawn as alien. There can be many of them, game makes random choice.
------ PROPERTIES ------
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">Orientation. (vec3_float (yaw pitch roll))</angles>
<target key="onSpawn" name="onSpawn">Name of the target fired when player comes to the intermission view. (string (target))</target>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<target key="target" name="target">Alternative way to set orientation. (string (target))</target>
<targetname key="targetname" name="targetname">Can possibly be fired. (string (targetname))</targetname>
</point>

<point name="pos_human_intermission" color="0 0.2 1" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Point where camera will hang when player awaits spawn as human. There can be many of them, game makes random choice.
------ PROPERTIES ------
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">Orientation. (vec3_float (yaw pitch roll))</angles>
<target key="onSpawn" name="onSpawn">Name of the target fired when player comes to the intermission view. (string (target))</target>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<target key="target" name="target">Alternative way to set orientation. (string (target))</target>
<targetname key="targetname" name="targetname">Can possibly be fired. (string (targetname))</targetname>
</point>

<point name="info_human_intermission" color="0 0.2 1" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: pos_human_intermission
------ DESCRIPTION ------
Point where camera will hang when player awaits spawn as human. There can be many of them, game makes random choice.
------ PROPERTIES ------
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">Orientation. (vec3_float (yaw pitch roll))</angles>
<target key="onSpawn" name="onSpawn">Name of the target fired when player comes to the intermission view. (string (target))</target>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<target key="target" name="target">Alternative way to set orientation. (string (target))</target>
<targetname key="targetname" name="targetname">Can possibly be fired. (string (targetname))</targetname>
</point>

<point name="pos_player_intermission" color="1 0 1" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Point where camera will hang when player is choosing team. There can be many of them, game makes random choice.
------ PROPERTIES ------
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">Orientation. (vec3_float (yaw pitch roll))</angles>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<target key="target" name="target">Alternative way to set orientation. (string (target))</target>
<targetname key="targetname" name="targetname">Can possibly be fired. (string (targetname))</targetname>
</point>

<point name="info_player_intermission" color="1 0 1" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: pos_player_intermission
------ DESCRIPTION ------
Point where camera will hang when player is choosing team. There can be many of them, game makes random choice.
------ PROPERTIES ------
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">Orientation. (vec3_float (yaw pitch roll))</angles>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<target key="target" name="target">Alternative way to set orientation. (string (target))</target>
<targetname key="targetname" name="targetname">Can possibly be fired. (string (targetname))</targetname>
</point>

<point name="pos_location" color="0 0.498 0" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Location marker used for team chats. The closest pos_location in sight is used for the location. If none is in sight, the closest in distance is used.
------ PROPERTIES ------
<integer key="count" name="count">Color of the location text displayed in parentheses during team chat. 0: white (default) 1: red 2: green 3: yellow 4: blue 5: cyan 6: magenta 7: white (int)</integer>
<string key="message" name="message">Name of the location (text string). Displayed in parentheses in front of all team chat and order messages. (string)</string>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<targetname key="targetname" name="targetname">Can possibly be fired. (string (targetname))</targetname>
</point>

<point name="target_location" color="0 0.498 0" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: pos_location
------ DESCRIPTION ------
Location marker used for team chats. The closest pos_location in sight is used for the location. If none is in sight, the closest in distance is used.
------ PROPERTIES ------
<integer key="count" name="count">Color of the location text displayed in parentheses during team chat. 0: white (default) 1: red 2: green 3: yellow 4: blue 5: cyan 6: magenta 7: white (int)</integer>
<string key="message" name="message">Name of the location (text string). Displayed in parentheses in front of all team chat and order messages. (string)</string>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<targetname key="targetname" name="targetname">Can possibly be fired. (string (targetname))</targetname>
</point>

<point name="pos_player_spawn" color="1 0 1" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Use pos_player_intermission instead.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<targetname key="targetname" name="targetname">Can possibly be fired. (string (targetname))</targetname>
</point>

<point name="info_player_deathmatch" color="1 0 1" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: pos_player_spawn
------ DESCRIPTION ------
Use pos_player_intermission instead.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<targetname key="targetname" name="targetname">Can possibly be fired. (string (targetname))</targetname>
</point>

<point name="info_player_start" color="1 0 1" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: pos_player_spawn
------ DESCRIPTION ------
Use pos_player_intermission instead.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<targetname key="targetname" name="targetname">Can possibly be fired. (string (targetname))</targetname>
</point>

<point name="pos_navcon_next" color="1 0.8 0.267" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Navmesh connection point (start point).
Link it from a pos_navcon_start and the navmesh generator will generate a navmesh connection.
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Name to use as target in a pos_navcon_start entity (or another pos_navcon_next in a chain). (string (targetname))</targetname>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<target key="target" name="target">Set the name of another pos_navcon_next entity to connect them together in a chain. (string (target))</target>
</point>

<point name="pos_navcon_start" color="1 0.8 0.267" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Navmesh connection point (next point).
Link it to a pos_navcon_next and the navmesh generator will generate a navmesh connection.
------ SPAWNFLAGS ------
<flag key="BIDIR" name="BIDIR" bit="0">Bidirectional.</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Set the name of a pos_navcon_next entity to connect them together. (string (target))</target>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<string key="playerclasses" name="playerclasses">Space-separated list of player classes that can go this route.</string>
<string key="playerteams" name="playerteams">Space-separated list of player teams that can go this route.</string>
<real key="size" name="size" value="50">Radius. (float, def: 50)</real>
</point>

<point name="pos_target" color="0 0.498 0" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Aiming target for entities like light, gfx_portal_camera and env_afx_push.
Used as a positional target for entities that can use directional pointing.
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for aiming. (string (targetname))</targetname>
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">Used for env_afx_teleport. Direction in which player will look when teleported. (vec3_float (yaw pitch roll))</angles>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="target_position" color="0 0.498 0" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: pos_target
------ DESCRIPTION ------
Aiming target for entities like light, gfx_portal_camera and env_afx_push.
Used as a positional target for entities that can use directional pointing.
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for aiming. (string (targetname))</targetname>
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">Used for env_afx_teleport. Direction in which player will look when teleported. (vec3_float (yaw pitch roll))</angles>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="info_notnull" color="0 0.498 0" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: pos_target
------ DESCRIPTION ------
Aiming target for entities like light, gfx_portal_camera and env_afx_push.
Used as a positional target for entities that can use directional pointing.
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for aiming. (string (targetname))</targetname>
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">Used for env_afx_teleport. Direction in which player will look when teleported. (vec3_float (yaw pitch roll))</angles>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="misc_teleporter_dest" color="1 0.498 0.247" box="-32 -32 -24 32 32 -16">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: pos_target
------ DESCRIPTION ------
Aiming target for entities like light, gfx_portal_camera and env_afx_push.
Used as a positional target for entities that can use directional pointing.
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for aiming. (string (targetname))</targetname>
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">Used for env_afx_teleport. Direction in which player will look when teleported. (vec3_float (yaw pitch roll))</angles>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="info_null" color="0 0.498 0" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: pos_target
------ DESCRIPTION ------
Same as pos_target, but used only at q3map2 stage. I.e. you can use it only for lights.
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for aiming. (string (targetname))</targetname>
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">Used for env_afx_teleport. Direction in which player will look when teleported. (vec3_float (yaw pitch roll))</angles>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="target_print" color="0 0.498 0" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
------ DESCRIPTION ------
This will print a message on the center of the screen when triggered.
By default, all the clients will see the message.
------ SPAWNFLAGS ------
<flag key="HUMAN_TEAM" name="HUMAN_TEAM" bit="0">Only the human team players will see the message.</flag>
<flag key="ALIEN_TEAM" name="ALIEN_TEAM" bit="1">Only the alien team players will see the message.</flag>
<flag key="PRIVATE" name="PRIVATE" bit="2">Only the player that activates the target will see the message.</flag>
<flag key="CHAT" name="CHAT" bit="3">Also print this message in the chat.</flag>
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<string key="message" name="message">text string to print on screen. (string)</string>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="target_push" color="0.498 0.498 0.498" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
------ DESCRIPTION ------
DO NOT USE THIS ENTITY, USE env_afx_push!
This can be used to create jump pads and launch ramps.
Unlike trigger_push, this is NOT client side predicted and must be activated by a trigger.
To make a jump pad or launch ramp, create a trigger_multiple where the jump must originate. Place the target_push directly above the trigger_multiple and place the target_position entity at the highest point of the jump. Target the trigger_multiple to the target_push and target the target_push to the target_position/info_notnull.
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] The activating trigger points to this. Push originates from the location of the trigger. (string (targetname))</targetname>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<target key="target" name="target">This points to the aiming entity to which the player will jump. (string (target))</target>
</point>

<point name="target_teleporter" color="0 0.498 0" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
------ DESCRIPTION ------
DO NOT USE THIS ENTITY, USE env_afx_teleport!
Activating this will teleport players to the location of the targeted misc_teleporter_dest entity. Unlike trigger_teleport, this entity must be activated by a trigger and does NOT allow client prediction of events.
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<real key="speed" name="speed">Player speed after teleportation. (float)</real>
<target key="target" name="target">This must point to a misc_teleporter_dest entity. (string (target))</target>
</point>

<point name="target_hurt" color="1 0 0" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
------ DESCRIPTION ------
DO NOT USE THIS ENTITY, USE env_afx_hurt!
When triggered, this hurts the entity that caused the trigger.
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<integer key="dmg" name="dmg" value="5">Amount of damage to deal. (int, def: 5)</integer>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="team_human_spawn" color="0 0.2 1" box="-40 -40 -4 40 40 17" model="models/buildables/telenode/telenode.iqm">
------ DESCRIPTION ------
The human spawn point.
------ PROPERTIES ------
<angle key="angle" name="angle">Player orientation after spawn. (float (yaw))</angle>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="team_human_armoury" color="0 0.2 1" box="-40 -40 -13 40 40 50" model="models/buildables/arm/arm.iqm">
------ DESCRIPTION ------
The human armoury.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="team_human_drill" color="0 0.2 1" box="-15 -15 0 15 15 58" model="models/buildables/drill/drill.iqm">
------ DESCRIPTION ------
The human drill.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="team_human_medistat" color="0 0.2 1" box="-35 -35 -7 35 35 2" model="models/buildables/medistat/medistat.iqm">
------ DESCRIPTION ------
The human medical station.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="team_human_mgturret" color="0 0.2 1" box="-25 -25 -20 25 25 20" model="models/buildables/mgturret/mgturret.iqm">
------ DESCRIPTION ------
The human machinegun turret.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="team_human_rocketpod" color="0 0.2 1" box="-25 -25 -20 25 25 20" model="models/buildables/rocketpod/rocketpod.iqm">
------ DESCRIPTION ------
The human rocket pod.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="team_human_reactor" color="0 0.2 1" box="-41 -41 -4 41 41 100" model="models/buildables/reactor/reactor.iqm">
------ DESCRIPTION ------
The human reactor.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="team_alien_spawn" color="1 0.2 0" box="-15 -15 -15 15 15 15" model="models/buildables/eggpod/eggpod.iqm">
------ DESCRIPTION ------
The alien spawn point.
------ PROPERTIES ------
<angle key="angle" name="angle">Player orientation after spawn. (float (yaw))</angle>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="team_alien_acid_tube" color="1 0.2 0" box="-20 -20 -15 20 20 15" model="models/buildables/acid_tube/acid_tube.iqm">
------ DESCRIPTION ------
The alien acid tube.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="team_alien_spiker" color="1 0.2 0" box="-20 -20 -15 20 20 15" model="models/buildables/spiker/spiker.iqm">
------ DESCRIPTION ------
The alien spiker.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="team_alien_barricade" color="1 0.2 0" box="-35 -35 -15 35 35 60" model="models/buildables/barricade/barricade.iqm">
------ DESCRIPTION ------
The alien barricade.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="team_alien_booster" color="1 0.2 0" box="-26 -26 -9 26 26 9" model="models/buildables/booster/booster.iqm">
------ DESCRIPTION ------
The alien booster.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="team_alien_overmind" color="1 0.2 0" box="-45 -45 -15 45 45 95" model="models/buildables/overmind/overmind.iqm">
------ DESCRIPTION ------
The alien overmind.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="team_alien_trapper" color="1 0.2 0" box="-15 -15 -15 15 15 15" model="models/buildables/trapper/trapper.iqm">
------ DESCRIPTION ------
The alien trapper.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="team_alien_hive" color="1 0.2 0" box="-20 -20 -20 20 20 20" model="models/buildables/hive/hive.iqm">
------ DESCRIPTION ------
The alien hive.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="team_alien_leech" color="1 0.2 0" box="-40 -40 -15 40 40 15" model="models/buildables/leech/leech.iqm">
------ DESCRIPTION ------
The alien leech.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="ctrl_limited" color="0 0.702 0.702" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Can be triggered limited amount of times. Every activation fires targets.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Must have entity to fire at. (string (target))</target>
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<integer key="amount" name="amount" value="1">Possible activation count. (int, def: 1)</integer>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="ctrl_relay" color="0 0.702 0.702" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
When activated waits amount of time then activates its own targets.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
------ PROPERTIES ------
<target key="onAct" name="onAct">[required] Name of the target to activate. (string (target))</target>
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<string key="wait" name="wait" value="0">Delay before target activation. (time_2float (time [variance]), def: 0)</string>
</point>

<point name="target_relay" color="0 0.702 0.702" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: ctrl_relay
------ DESCRIPTION ------
When activated waits amount of time then activates its own targets.
------ SPAWNFLAGS ------
<flag key="ONLY_HUMANS" name="ONLY_HUMANS" bit="0">Can be activated only by a human.</flag>
<flag key="ONLY_ALIENS" name="ONLY_ALIENS" bit="1">Can be activated only by an alien.</flag>
<flag key="RANDOM" name="RANDOM" bit="2">Ignore delay, activate random target.</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Name of the target to activate. (string (target))</target>
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<string key="wait" name="wait" value="0">Delay before target activation. (time_2float (time [variance]), def: 0)</string>
</point>

<point name="target_delay" color="0 0.702 0.702" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: ctrl_relay
------ DESCRIPTION ------
When activated waits amount of time then activates its own targets.
------ SPAWNFLAGS ------
<flag key="ONLY_HUMANS" name="ONLY_HUMANS" bit="0">Can be activated only by a human.</flag>
<flag key="ONLY_ALIENS" name="ONLY_ALIENS" bit="1">Can be activated only by an alien.</flag>
<flag key="RANDOM" name="RANDOM" bit="2">Ignore delay, activate random target.</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Name of the target to activate. (string (target))</target>
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<string key="wait" name="wait" value="1">Delay before target activation. (time_2float (time [variance]), def: 1)</string>
</point>

<group name="env_afx_ammo" color="0.357 0.486 0.176">
------ DESCRIPTION ------
Gives ammo to the player who activates it (e.g. via button).
------ SPAWNFLAGS ------
<flag key="EVERY_SECOND" name="EVERY_SECOND" bit="0">Act every second instead of every frame.</flag>
<flag key="DISABLE_ENERGO" name="DISABLE_ENERGO" bit="1">Disable recharging energetic weapons.</flag>
<flag key="DISABLE_NON_ENERGO" name="DISABLE_NON_ENERGO" bit="2">Disable recharging non-energetic weapons.</flag>
------ PROPERTIES ------
<integer key="ammo" name="ammo" value="1">Amount of ammo. Values &gt; 1 corrected to 1. (int, def: 1)</integer>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
</group>

<group name="trigger_ammo" color="0.357 0.486 0.176">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: env_afx_ammo
------ DESCRIPTION ------
Gives ammo to the player who activates it (e.g. via button).
------ SPAWNFLAGS ------
<flag key="EVERY_SECOND" name="EVERY_SECOND" bit="0">Act every second instead of every frame.</flag>
<flag key="DISABLE_ENERGO" name="DISABLE_ENERGO" bit="1">Disable recharging energetic weapons.</flag>
<flag key="DISABLE_NON_ENERGO" name="DISABLE_NON_ENERGO" bit="2">Disable recharging non-energetic weapons.</flag>
------ PROPERTIES ------
<integer key="ammo" name="ammo" value="1">Amount of ammo. Values &gt; 1 corrected to 1. (int, def: 1)</integer>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
</group>

<group name="env_afx_gravity" color="0.498 0.498 0.498">
------ DESCRIPTION ------
Area with different gravity within.
------ PROPERTIES ------
<integer key="amount" name="amount" value="800">The gravity within this entity. (int, def: 800)</integer>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
</group>

<group name="trigger_gravity" color="0.498 0.498 0.498">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: env_afx_gravity
------ DESCRIPTION ------
Area with different gravity within.
------ PROPERTIES ------
<integer key="amount" name="amount" value="800">The gravity within this entity. (int, def: 800)</integer>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
</group>

<group name="env_afx_heal" color="0.176 0.486 0.314">
------ DESCRIPTION ------
Heals players touching entity.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
<flag key="EVERY_SECOND" name="EVERY_SECOND" bit="1">Heal every second instead of every frame.</flag>
------ PROPERTIES ------
<integer key="heal" name="heal" value="5">Amount of heal. Values &gt; 1 corrected to 1. (int, def: 5)</integer>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
</group>

<group name="trigger_heal" color="0.176 0.486 0.314">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: env_afx_heal
------ DESCRIPTION ------
Heals players touching entity.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
<flag key="EVERY_SECOND" name="EVERY_SECOND" bit="1">Heal every second instead of every frame.</flag>
------ PROPERTIES ------
<integer key="heal" name="heal" value="5">Amount of heal. Values &gt; 1 corrected to 1. (int, def: 5)</integer>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
</group>

<group name="env_afx_hurt" color="0.784 0.067 0.067">
------ DESCRIPTION ------
Hurts players or buildings touching entity.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
<flag key="NO_SOUND" name="NO_SOUND" bit="2">No sound played.</flag>
<flag key="NO_PROTECTION" name="NO_PROTECTION" bit="3">Player will be hurt regardless of protection (e.g. invulnerability power-up).</flag>
<flag key="EVERY_SECOND" name="EVERY_SECOND" bit="4">Damage every second instead of every frame.</flag>
------ PROPERTIES ------
<integer key="dmg" name="dmg" value="5">Damage dealt. Values &gt;= 0 corrected to default value. (int, def: 5)</integer>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
</group>

<group name="trigger_hurt" color="0.784 0.067 0.067">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: env_afx_hurt
------ DESCRIPTION ------
Hurts players or buildings touching entity.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
<flag key="NO_SOUND" name="NO_SOUND" bit="2">No sound played.</flag>
<flag key="NO_PROTECTION" name="NO_PROTECTION" bit="3">Player will be hurt regardless of protection (e.g. invulnerability power-up).</flag>
<flag key="EVERY_SECOND" name="EVERY_SECOND" bit="4">Damage every second instead of every frame.</flag>
------ PROPERTIES ------
<integer key="dmg" name="dmg" value="5">Damage dealt. Values &gt;= 0 corrected to default value. (int, def: 5)</integer>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
</group>

<group name="env_afx_push" color="0.498 0.498 0.498">
------ DESCRIPTION ------
This is used to create jump pads and launch ramps.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
------ PROPERTIES ------
<target key="target" name="target">Name of the aiming position entity to which the player will jump. This is the highest point of the jump. (string (target))</target>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
<string key="wait" name="wait" value="0.5 0">Delay between triggerings. (time_2float (time [variance]), def: 0.5 0)</string>
</group>

<group name="trigger_push" color="0.498 0.498 0.498">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: env_afx_push
------ DESCRIPTION ------
This is used to create jump pads and launch ramps.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
------ PROPERTIES ------
<target key="target" name="target">Name of the aiming position entity to which the player will jump. This is the highest point of the jump. (string (target))</target>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
<string key="wait" name="wait" value="0.5 0">Delay between triggerings. (time_2float (time [variance]), def: 0.5 0)</string>
</group>

<group name="env_afx_teleport" color="0.459 0.286 0.157">
------ DESCRIPTION ------
Teleports player touching entity.
Set &quot;angles&quot; property of target to define player direction after teleportation.
------ SPAWNFLAGS ------
<flag key="SPECTATORS_ONLY" name="SPECTATORS_ONLY" bit="0">Affect only spectators. Spectator teleporters are not normally placed in the editor, but are created automatically near doors to allow spectators to move through them.
</flag>
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="1">Teleport disabled by default.</flag>
------ PROPERTIES ------
<real key="speed" name="speed" value="400">Player speed after teleportation. (float, def: 400)</real>
<target key="target" name="target">Name of the target point. You can set same targetname to many positions, they will be chosen randomly. (string (target))</target>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
</group>

<group name="trigger_teleport" color="0.459 0.286 0.157">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: env_afx_teleport
------ DESCRIPTION ------
Teleports player touching entity.
Set &quot;angles&quot; property of target to define player direction after teleportation.
------ SPAWNFLAGS ------
<flag key="SPECTATORS_ONLY" name="SPECTATORS_ONLY" bit="0">Affect only spectators. Spectator teleporters are not normally placed in the editor, but are created automatically near doors to allow spectators to move through them.
</flag>
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="1">Teleport disabled by default.</flag>
------ PROPERTIES ------
<real key="speed" name="speed" value="400">Player speed after teleportation. (float, def: 400)</real>
<target key="target" name="target">Name of the target point. You can set same targetname to many positions, they will be chosen randomly. (string (target))</target>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
</group>

<point name="fx_rumble" color="1 0 0" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
When triggered, this initiates a level-wide rumble effect. All players are affected.
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<integer key="amount" name="amount" value="10">Duration of the quake. (int, def: 10)</integer>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<real key="speed" name="speed" value="100">Severity of the quake. (float, def: 100)</real>
</point>

<point name="target_rumble" color="1 0 0" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: fx_rumble
------ DESCRIPTION ------
When triggered, this initiates a level-wide rumble effect. All players are affected.
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<integer key="amount" name="amount" value="10">Duration of the quake. (int, def: 10)</integer>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<real key="speed" name="speed" value="100">Severity of the quake. (float, def: 100)</real>
</point>

<point name="game_end" color="1 0 0" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
When triggered, this causes an unconditional win for the team.
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<integer key="team" name="team">1 for aliens, 2 for humans. (int)</integer>
</point>

<point name="target_alien_win" color="1 0.2 0" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: game_end
------ DESCRIPTION ------
When triggered, this causes an unconditional win for the alien team.
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="target_human_win" color="0 0.2 1" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: game_end
------ DESCRIPTION ------
When triggered, this causes an unconditional win for the human team.
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="game_funds" color="1 0 0" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Gives funds to the player who activates it (e.g. via button).
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<integer key="amount" name="amount" value="0">Amount of funds. 1 = 1 credit = 0.01 evo. (int, def: 0)</integer>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="game_kill" color="1 0 0" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Instantly kills the player who activates it (e.g. via button).
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="target_kill" color="1 0 0" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: game_kill
------ DESCRIPTION ------
Instantly kills the player who activates it (e.g. via button).
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="game_score" color="1 0 0" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Gives score points to the player who activates it (e.g. via button).
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<integer key="amount" name="amount" value="1">Amount of score points. 50 = 1 score, calculated as quantity of funds game gives you when you earn amount of score. (int, def: 1)</integer>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="target_score" color="1 0 0" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: game_score
------ DESCRIPTION ------
Gives score points to the player who activates it (e.g. via button).
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<integer key="amount" name="amount" value="1">Amount of score points. 50 = 1 score, calculated as quantity of funds game gives you when you earn amount of score. (int, def: 1)</integer>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="gfx_animated_model" color="1 0.498 0.247" box="-12 -12 -12 12 12 12">
------ DESCRIPTION ------
Animated model entity. Not baked info level geometry. Can be walked through.
------ SPAWNFLAGS ------
<flag key="TOGGLE_VISIBILITY" name="TOGGLE_VISIBILITY" bit="0">Toggle entity visibility instead of animation.</flag>
<flag key="SPAWN_STOPPED" name="SPAWN_STOPPED" bit="1">Spawn with animation stopped.</flag>
------ PROPERTIES ------
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">Orientation. (vec3_float (yaw pitch roll))</angles>
<string key="animation" name="animation">The guts of the entity. This is identical to an entry in an animation.cfg - Start Frame, Number of frames, Looping Frames, Frame rate. (vec4_float (start count loopbackcount framerate), eg: 0 30 30 20)</string>
<model key="model" name="model">Path to a model. (string (model), eg: models/mapobjects/teleporter/teleporter.md3)</model>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<real key="radius" name="radius" value="1">The scale of the model compared to its original size. (float, def: 1)</real>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
</point>

<point name="misc_anim_model" color="1 0.498 0.247" box="-12 -12 -12 12 12 12">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: gfx_animated_model
------ DESCRIPTION ------
Animated model entity. Not baked info level geometry. Can be walked through.
------ SPAWNFLAGS ------
<flag key="TOGGLE_VISIBILITY" name="TOGGLE_VISIBILITY" bit="0">Toggle entity visibility instead of animation.</flag>
<flag key="SPAWN_STOPPED" name="SPAWN_STOPPED" bit="1">Spawn with animation stopped.</flag>
------ PROPERTIES ------
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">Orientation. (vec3_float (yaw pitch roll))</angles>
<string key="animation" name="animation">The guts of the entity. This is identical to an entry in an animation.cfg - Start Frame, Number of frames, Looping Frames, Frame rate. (vec4_float (start count loopbackcount framerate), eg: 0 30 30 20)</string>
<model key="model" name="model">Path to a model. (string (model), eg: models/mapobjects/teleporter/teleporter.md3)</model>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<real key="radius" name="radius" value="1">The scale of the model compared to its original size. (float, def: 1)</real>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
</point>

<point name="misc_model" color="1 0.498 0.247" box="-12 -12 -12 12 12 12">
DEPRECATED! DEPRECATED! DEPRECATED!
------ DESCRIPTION ------
Static model baked into level geometry by q3map2. Can be walked through. Not animated, but you can choose one of the frames.
For &quot;_celshader&quot; read http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html
------ SPAWNFLAGS ------
<flag key="CLIPMODELS" name="CLIPMODELS" bit="1">Disallows walking through the model (makes it solid).</flag>
<flag key="FORCEMETA" name="FORCEMETA" bit="2">Use lightmap lighting for the model.</flag>
------ PROPERTIES ------
<angle key="angle" name="angle">[q3map] Short version of &quot;angles&quot;. (float (yaw))</angle>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<string key="_celshader" name="_celshader">[q3map] Sets the cel shader used for this geometry. Note: omit the &quot;textures/&quot; prefix. Example: http://q3map2.robotrenegade.com/docs/shader_manual/cel-shading.html (string, eg: mymap/ink)</string>
<integer key="_cs" name="_cs">[q3map] or &quot;_castShadows&quot;. Group number entity cast shadow to. Negative value uses same group but disables world. 0 disables shadow casting. (int)</integer>
<integer key="_frame" name="_frame">[q3map] Animation frame to pick. This differs from gfx_animated_model.animation! (int, eg: 5)</integer>
<real key="_lightmapscale" name="_lightmapscale" value="1">[q3map] Value scaling the resolution of lightmaps. Lesser value gives bigger resolution. (float, def: 1)</real>
<string key="_remap*" name="_remap*">[q3map] Remap shaders. Any property name starting with &quot;_remap&quot; counts. Values are ; separated. (string, eg: models/buildables/tesla/tesla_main;textures/newmap/ter_dirt)</string>
<integer key="_rs" name="_rs">[q3map] or &quot;_receiveShadows&quot;. Group number entity receive shadow from. Negative value uses same group but disables world. 0 disables shadow receiving. (int)</integer>
<angles key="angles" name="angles">[q3map] Full model orientation. (vec3_float (yaw pitch roll))</angles>
<model key="model" name="model">[q3map] Path to a custom model. (string (model))</model>
<real key="modelscale" name="modelscale" value="1">[q3map] Scale factor. (float, def: 1)</real>
<real3 key="modelscale_vec" name="modelscale_vec" value="1 1 1">[q3map] Separate scale factor per axis. (vec3_float, def: 1 1 1)</real3>
</point>

<point name="gfx_light_flare" color="0.651 0.651 1" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
A light flare entity.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
------ PROPERTIES ------
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">This reflects which direction the flare points. It is not important unless the second component of the radius key is employed. (vec3_float (yaw pitch roll))</angles>
<integer key="mindist" name="mindist" value="0">Minimal distance for flare to appear. (int, def: 0)</integer>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<real3 key="radius" name="radius">The radius key is a vector.
The first component is the size of the light flare. The radius is calculated by taking the distance of the viewer from the light flare and dividing by this key, so the larger the key value, the smaller the flare. Values between 2 and 10 are sensible.
The second component indicates the angle around the direction the flare points for which it is visible. For example a value of 90 means that you can see the flare while infront of the entity, but not when behind it. If set to zero the light flare will be visible from any angle
The third component is similar to the first except that it specifies the size of the light source rather than the size of the light flare itself. This is useful when the higher detail flare fading modes are enabled. If this is set to the same value as the first component, fading will commence as soon as the edge of the light flare is occluded by some surface between the viewer and the flare. If it is set larger the flare will overlap the occluding surface before it begins to fade. (vec3_float)</real3>
<texture key="shader" name="shader">The name of the shader of the light flare. (string (texture))</texture>
<real key="speed" name="speed" value="200">Fading time, msec. Useful only for cg_lightFlare 2. (float, def: 200)</real>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
</point>

<point name="misc_light_flare" color="0.651 0.651 1" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: gfx_light_flare
------ DESCRIPTION ------
A light flare entity.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
------ PROPERTIES ------
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">This reflects which direction the flare points. It is not important unless the second component of the radius key is employed. (vec3_float (yaw pitch roll))</angles>
<integer key="mindist" name="mindist" value="0">Minimal distance for flare to appear. (int, def: 0)</integer>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<real3 key="radius" name="radius">The radius key is a vector.
The first component is the size of the light flare. The radius is calculated by taking the distance of the viewer from the light flare and dividing by this key, so the larger the key value, the smaller the flare. Values between 2 and 10 are sensible.
The second component indicates the angle around the direction the flare points for which it is visible. For example a value of 90 means that you can see the flare while infront of the entity, but not when behind it. If set to zero the light flare will be visible from any angle
The third component is similar to the first except that it specifies the size of the light source rather than the size of the light flare itself. This is useful when the higher detail flare fading modes are enabled. If this is set to the same value as the first component, fading will commence as soon as the edge of the light flare is occluded by some surface between the viewer and the flare. If it is set larger the flare will overlap the occluding surface before it begins to fade. (vec3_float)</real3>
<texture key="shader" name="shader">The name of the shader of the light flare. (string (texture))</texture>
<real key="speed" name="speed" value="200">Fading time, msec. Useful only for cg_lightFlare 2. (float, def: 200)</real>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
</point>

<point name="gfx_particle_system" color="1 0.498 0.247" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Particle system entity.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
------ PROPERTIES ------
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">Particle system orientation. (vec3_float (yaw pitch roll))</angles>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<string key="psName" name="psName" value="">Name of particle system. Look at scripts/*.particle, they contain particle system effects along with their names. (string, eg: firebomb_subPS, def: )</string>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
<real key="wait" name="wait">Wait after toggle, then toggle again. Disabled if value &gt;= 0. (float)</real>
</point>

<point name="misc_particle_system" color="1 0.498 0.247" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: gfx_particle_system
------ DESCRIPTION ------
Particle system entity.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
------ PROPERTIES ------
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">Particle system orientation. (vec3_float (yaw pitch roll))</angles>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<string key="psName" name="psName" value="">Name of particle system. Look at scripts/*.particle, they contain particle system effects along with their names. (string, eg: firebomb_subPS, def: )</string>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
<real key="wait" name="wait">Wait after toggle, then toggle again. Disabled if value &gt;= 0. (float)</real>
</point>

<point name="gfx_portal_camera" color="1 0.498 0.247" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Portal camera.
This camera is used to project its view onto a portal surface in the level through the intermediary of a gfx_portal_surface entity. Use the &quot;angles&quot; key or target a pos_target entity to set the camera&apos;s pointing direction.
Both the setting &quot;angles&quot; key or targeting a pos_target methods can be used to aim the camera. However, the pos_target method is simpler. In both cases, the &quot;roll&quot; key must be used to set the roll angle.
By default camera is wiggling. Use spawnflags to make it rotate or stand still.
------ SPAWNFLAGS ------
<flag key="FRAME25" name="FRAME25" bit="0">Slow rotation.</flag>
<flag key="FRAME75" name="FRAME75" bit="1">Fast rotation.</flag>
<flag key="NO_ROTATION" name="NO_ROTATION" bit="2">Disable camera wiggling.</flag>
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] A gfx_portal_surface portal surface indicator must point to this. (string (targetname))</targetname>
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">Camera orientation. 3rd component is ignored in favour of &quot;roll&quot;. (vec3_float (yaw pitch roll))</angles>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<string key="roll" name="roll">Roll angle of camera.</string>
<target key="target" name="target">Point this to a pos_target entity to set the camera&apos;s pointing direction. (string (target))</target>
</point>

<point name="misc_portal_camera" color="1 0.498 0.247" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: gfx_portal_camera
------ DESCRIPTION ------
Portal camera.
This camera is used to project its view onto a portal surface in the level through the intermediary of a gfx_portal_surface entity. Use the &quot;angles&quot; key or target a pos_target entity to set the camera&apos;s pointing direction.
Both the setting &quot;angles&quot; key or targeting a pos_target methods can be used to aim the camera. However, the pos_target method is simpler. In both cases, the &quot;roll&quot; key must be used to set the roll angle.
By default camera is wiggling. Use spawnflags to make it rotate or stand still.
------ SPAWNFLAGS ------
<flag key="FRAME25" name="FRAME25" bit="0">Slow rotation.</flag>
<flag key="FRAME75" name="FRAME75" bit="1">Fast rotation.</flag>
<flag key="NO_ROTATION" name="NO_ROTATION" bit="2">Disable camera wiggling.</flag>
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] A gfx_portal_surface portal surface indicator must point to this. (string (targetname))</targetname>
<angle key="angle" name="angle">Short version of &quot;angles&quot;. (float (yaw))</angle>
<angles key="angles" name="angles">Camera orientation. 3rd component is ignored in favour of &quot;roll&quot;. (vec3_float (yaw pitch roll))</angles>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<string key="roll" name="roll">Roll angle of camera.</string>
<target key="target" name="target">Point this to a pos_target entity to set the camera&apos;s pointing direction. (string (target))</target>
</point>

<point name="gfx_portal_surface" color="1 0.498 0.247" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Portal surface indicator. This will &quot;lock on&quot; the brush face closest to it and identify as a portal. The view displayed on the portal surface is the view of the gfx_portal_camera that this entity targets. Also used for mirrors (see Notes).
The entity must be no farther than 64 units away from the portal surface to lock onto it. To make a mirror, apply the common/mirror shader to the surface, place this entity near it but don&apos;t target a gfx_portal_camera.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<target key="target" name="target">Point this to a gfx_portal_camera that &quot;sees&quot; the view you want to display on the portal. (string (target))</target>
<targetname key="targetname" name="targetname">Can possibly be fired. (string (targetname))</targetname>
</point>

<point name="misc_portal_surface" color="1 0.498 0.247" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: gfx_portal_surface
------ DESCRIPTION ------
Portal surface indicator. This will &quot;lock on&quot; the brush face closest to it and identify as a portal. The view displayed on the portal surface is the view of the gfx_portal_camera that this entity targets. Also used for mirrors (see Notes).
The entity must be no farther than 64 units away from the portal surface to lock onto it. To make a mirror, apply the common/mirror shader to the surface, place this entity near it but don&apos;t target a gfx_portal_camera.
------ PROPERTIES ------
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<target key="target" name="target">Point this to a gfx_portal_camera that &quot;sees&quot; the view you want to display on the portal. (string (target))</target>
<targetname key="targetname" name="targetname">Can possibly be fired. (string (targetname))</targetname>
</point>

<point name="gfx_shader_mod" color="1 0.498 0.247" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Entity remaps shader when activated.
------ PROPERTIES ------
<targetname key="targetname" name="targetname">[required] Must be someone&apos;s target for firing. (string (targetname))</targetname>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<string key="replacement" name="replacement">Name of replacement shader. (string)</string>
<texture key="shader" name="shader">Name of original shader. (string (texture))</texture>
</point>

<group name="sensor_buildable" color="0.263 0.667 0">
------ DESCRIPTION ------
Triggered by a buildable or subset of buildables.
If condition is satisfied fires targets continuously with &quot;wait&quot; period.
If NEGATE used, sensor still needs to be touched to activate.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
<flag key="NEGATE" name="NEGATE" bit="1">Negate sensor condition.</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Must have entity to fire at. (string (target))</target>
<string key="buildables" name="buildables">A comma delimited list of buildables which will trigger this entity. If omitted matches all buildables. (eggpod,overmind,barricade,acid_tube,trapper,booster,hive,leech,telenode,mgturret, tesla,arm,medistat,drill,reactor,repeater)</string>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
<string key="wait" name="wait" value="0.5 0">Time in seconds until trigger becomes re-triggerable after it&apos;s been touched. (time_2float (time [variance]), def: 0.5 0)</string>
</group>

<group name="trigger_buildable" color="0.263 0.667 0">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: sensor_buildable
------ DESCRIPTION ------
Triggered by a buildable or subset of buildables.
If condition is satisfied fires targets continuously with &quot;wait&quot; period.
If NEGATE used, sensor still needs to be touched to activate.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
<flag key="NEGATE" name="NEGATE" bit="1">Negate sensor condition.</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Must have entity to fire at. (string (target))</target>
<string key="buildables" name="buildables">A comma delimited list of buildables which will trigger this entity. If omitted matches all buildables. (eggpod,overmind,barricade,acid_tube,trapper,booster,hive,leech,telenode,mgturret, tesla,arm,medistat,drill,reactor,repeater)</string>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
<string key="wait" name="wait" value="0.5 0">Time in seconds until trigger becomes re-triggerable after it&apos;s been touched. (time_2float (time [variance]), def: 0.5 0)</string>
</group>

<point name="sensor_creep" color="0.263 0.667 0" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Detects creep, i.e. area where the building is allowed.
If condition is satisfied fires targets continuously.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Must have entity to fire at. (string (target))</target>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="sensor_end" color="0.263 0.667 0" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Fires its targets when the team wins.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
<flag key="NEGATE" name="NEGATE" bit="1">Negate sensor condition.</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Must have entity to fire at. (string (target))</target>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
<integer key="team" name="team">1 for aliens, 2 for humans. 0 or omit to detect draw. (int)</integer>
</point>

<point name="trigger_win" color="0.263 0.667 0" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: sensor_end
------ DESCRIPTION ------
Fires its targets when the team wins.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
<flag key="NEGATE" name="NEGATE" bit="1">Negate sensor condition.</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Must have entity to fire at. (string (target))</target>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
<integer key="team" name="team">1 for aliens, 2 for humans. 0 or omit to detect draw. (int)</integer>
</point>

<group name="sensor_player" color="0.263 0.667 0">
------ DESCRIPTION ------
Triggered by a specific class or subset of classes. If no classes key is supplied every class will trigger this entity.
Triggered by a player carrying some item (weapon or upgrade) or subset of items. If no equipment key is supplied every human will trigger this entity.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
<flag key="NEGATE" name="NEGATE" bit="1">Negate sensor condition.</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Must have entity to fire at. (string (target))</target>
<string key="classes" name="classes">A comma delimited list of alien classes which will trigger this entity. (builder,builderupg,level0,level1,level2,level2upg,level3,level3upg,level4)</string>
<string key="equipment" name="equipment">A comma delimited list of human weapons or upgrades which will trigger this entity. (rifle,psaw,shotgun,lgun,mdriver,chaingun,flamer,prifle,lcannon, larmour,marmour,bsuit,radar,battpack,jetpack,gren,firebomb)</string>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
<integer key="team" name="team">1 for aliens, 2 for humans. Omit if you don&apos;t want to check the team. Not affected by NEGATE. (int)</integer>
<string key="wait" name="wait" value="0.5 0">Time in seconds until trigger becomes re-triggerable after it&apos;s been touched. (time_2float (time [variance]), def: 0.5 0)</string>
</group>

<group name="trigger_class" color="0.263 0.667 0">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: sensor_player
------ DESCRIPTION ------
Triggered by a specific class or subset of classes. If no classes key is supplied every class will trigger this entity.
Triggered by a player carrying some item (weapon or upgrade) or subset of items. If no equipment key is supplied every human will trigger this entity.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
<flag key="NEGATE" name="NEGATE" bit="1">Negate sensor condition.</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Must have entity to fire at. (string (target))</target>
<string key="classes" name="classes">A comma delimited list of alien classes which will trigger this entity. (builder,builderupg,level0,level1,level2,level2upg,level3,level3upg,level4)</string>
<string key="equipment" name="equipment">A comma delimited list of human weapons or upgrades which will trigger this entity. (rifle,psaw,shotgun,lgun,mdriver,chaingun,flamer,prifle,lcannon, larmour,marmour,bsuit,radar,battpack,jetpack,gren,firebomb)</string>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
<integer key="team" name="team">1 for aliens, 2 for humans. Omit if you don&apos;t want to check the team. Not affected by NEGATE. (int)</integer>
<string key="wait" name="wait" value="0.5 0">Time in seconds until trigger becomes re-triggerable after it&apos;s been touched. (time_2float (time [variance]), def: 0.5 0)</string>
</group>

<group name="trigger_equipment" color="0.263 0.667 0">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: sensor_player
------ DESCRIPTION ------
Triggered by a specific class or subset of classes. If no classes key is supplied every class will trigger this entity.
Triggered by a player carrying some item (weapon or upgrade) or subset of items. If no equipment key is supplied every human will trigger this entity.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
<flag key="NEGATE" name="NEGATE" bit="1">Negate sensor condition.</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Must have entity to fire at. (string (target))</target>
<string key="classes" name="classes">A comma delimited list of alien classes which will trigger this entity. (builder,builderupg,level0,level1,level2,level2upg,level3,level3upg,level4)</string>
<string key="equipment" name="equipment">A comma delimited list of human weapons or upgrades which will trigger this entity. (rifle,psaw,shotgun,lgun,mdriver,chaingun,flamer,prifle,lcannon, larmour,marmour,bsuit,radar,battpack,jetpack,gren,firebomb)</string>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
<integer key="team" name="team">1 for aliens, 2 for humans. Omit if you don&apos;t want to check the team. Not affected by NEGATE. (int)</integer>
<string key="wait" name="wait" value="0.5 0">Time in seconds until trigger becomes re-triggerable after it&apos;s been touched. (time_2float (time [variance]), def: 0.5 0)</string>
</group>

<group name="trigger_multiple" color="0.263 0.667 0">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: sensor_player
------ DESCRIPTION ------
Triggered by a player.
------ SPAWNFLAGS ------
<flag key="HUMANS" name="HUMANS" bit="0">Activated by humans.</flag>
<flag key="ALIENS" name="ALIENS" bit="1">Activated by aliens.</flag>
------ PROPERTIES ------
<target key="target" name="target">Name of the target to fire at. (string (target))</target>
<targetname key="targetname" name="targetname">Can also be triggered as target. (string (targetname))</targetname>
<string key="wait" name="wait" value="0.5 0">Time in seconds until trigger becomes re-triggerable after it&apos;s been touched. (time_2float (time [variance]), def: 0.5 0)</string>
</group>

<point name="sensor_power" color="0.263 0.667 0" box="-8 -8 -8 8 8 8">
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Must have entity to fire at. (string (target))</target>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="sensor_stage" color="0.263 0.667 0" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Triggers when the team reaches the stage. Stage down doesn&apos;t trigger.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
<flag key="NEGATE" name="NEGATE" bit="1">Negate sensor condition.</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Must have entity to fire at. (string (target))</target>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<integer key="stage" name="stage">The stage at which this entity is triggered. 2nd stage is 1, 3rd is 2. (int)</integer>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
<integer key="team" name="team">1 for aliens, 2 for humans. Omit if you don&apos;t want to check the team. (int)</integer>
</point>

<point name="trigger_stage" color="0.263 0.667 0" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: sensor_stage
------ DESCRIPTION ------
Triggers when the team reaches the stage. Stage down doesn&apos;t trigger.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
<flag key="NEGATE" name="NEGATE" bit="1">Negate sensor condition.</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Must have entity to fire at. (string (target))</target>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<integer key="stage" name="stage">The stage at which this entity is triggered. 2nd stage is 1, 3rd is 2. (int)</integer>
<targetname key="targetname" name="targetname">Can also be triggered as target. (string (targetname))</targetname>
<integer key="team" name="team">1 for aliens, 2 for humans. Omit if you don&apos;t want to check the team. (int)</integer>
</point>

<point name="sensor_start" color="0.263 0.667 0" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Fires the targets at game start.
------ PROPERTIES ------
<target key="target" name="target">[required] Must have entity to fire at. (string (target))</target>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="trigger_always" color="0.263 0.667 0" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: sensor_start
------ DESCRIPTION ------
Fires the targets at game start.
------ PROPERTIES ------
<target key="target" name="target">[required] Must have entity to fire at. (string (target))</target>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
</point>

<point name="sensor_support" color="0.263 0.667 0" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Detects creep, i.e. area where the building is allowed.
If condition is satisfied fires targets continuously.
------ SPAWNFLAGS ------
<flag key="SPAWN_DISABLED" name="SPAWN_DISABLED" bit="0">Disabled by default.</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Must have entity to fire at. (string (target))</target>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<integer key="team" name="team">The only valuable value is 1, i.e. aliens. Make sure you set this. (int)</integer>
</point>

<point name="sensor_timer" color="0.263 0.667 0" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Entity continuously fires its targets after a preset time delay.
------ SPAWNFLAGS ------
<flag key="START_ON" name="START_ON" bit="0">Timer will start on in the game and continuously fire its targets.</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Must have entity to fire at. (string (target))</target>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
<string key="wait" name="wait">Delay in seconds between each triggering of its targets. (time_2float (time [variance]))</string>
</point>

<point name="func_timer" color="0.263 0.667 0" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Entity continuously fires its targets after a preset time delay.
------ SPAWNFLAGS ------
<flag key="START_ON" name="START_ON" bit="0">Timer will start on in the game and continuously fire its targets.</flag>
------ PROPERTIES ------
<target key="target" name="target">[required] Must have entity to fire at. (string (target))</target>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<targetname key="targetname" name="targetname">Give it a name to be able to toggle its activity. (string (targetname))</targetname>
<string key="wait" name="wait">Delay in seconds between each triggering of its targets. (time_2float (time [variance]))</string>
</point>

<point name="sfx_speaker" color="0 0.702 0.702" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
Sound generating entity.
The path portion value of the &quot;noise&quot; key can be replaced by the implicit folder character &quot;*&quot; for triggered sounds that belong to a particular player model. For example, if you want to create a &quot;bottomless pit&quot; in which the player screams and dies when he falls into, you would place a sensor_player over the floor of the pit and target a spx_speaker with it. Then, you would set the &quot;noise&quot; key to &quot;*falling1.wav&quot;. The * character means the current player model&apos;s sound folder. So if your current player model is Granger, * = sound/player/builder, if your current player model is Battlesuit Human, * = sound/player/human_bsuit, etc. This cool feature provides an excellent way to create &quot;player-specific&quot; triggered sounds in your levels. Implies ACTIVATOR_SPEAKER on.
------ SPAWNFLAGS ------
<flag key="PRESTARTED_LOOP" name="PRESTARTED_LOOP" bit="0">Same as LOOP, but speaker is active by default.</flag>
<flag key="LOOP" name="LOOP" bit="1">Makes infinite loop. Can be toggled via targetname.</flag>
<flag key="BROADCAST" name="BROADCAST" bit="2">Makes sound global, sound volume is maximal everywhere on map. Doesn&apos;t work with LOOPs.</flag>
<flag key="ACTIVATOR_SPEAKER" name="ACTIVATOR_SPEAKER" bit="3">Plays sound only for person who activated it.</flag>
------ PROPERTIES ------
<sound key="noise" name="noise" value="NOSOUND">Path/name of .wav or .ogg file. (string (sound), eg: sound/noise.wav, def: NOSOUND)</sound>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<targetname key="targetname" name="targetname">Can possibly be fired. (string (targetname))</targetname>
<string key="wait" name="wait">With nonzero variance part continuously starts sounds in parallel with delay defined by &quot;wait&quot;. Otherwise makes no effect. Ignores LOOP flag. (time_2float (time [variance]))</string>
</point>

<point name="target_speaker" color="0 0.702 0.702" box="-8 -8 -8 8 8 8">
DEPRECATED! DEPRECATED! DEPRECATED!
RECOMMENDED TO USE: sfx_speaker
------ DESCRIPTION ------
Sound generating entity.
The path portion value of the &quot;noise&quot; key can be replaced by the implicit folder character &quot;*&quot; for triggered sounds that belong to a particular player model. For example, if you want to create a &quot;bottomless pit&quot; in which the player screams and dies when he falls into, you would place a sensor_player over the floor of the pit and target a spx_speaker with it. Then, you would set the &quot;noise&quot; key to &quot;*falling1.wav&quot;. The * character means the current player model&apos;s sound folder. So if your current player model is Granger, * = sound/player/builder, if your current player model is Battlesuit Human, * = sound/player/human_bsuit, etc. This cool feature provides an excellent way to create &quot;player-specific&quot; triggered sounds in your levels. Implies ACTIVATOR_SPEAKER on.
------ SPAWNFLAGS ------
<flag key="PRESTARTED_LOOP" name="PRESTARTED_LOOP" bit="0">Same as LOOP, but speaker is active by default.</flag>
<flag key="LOOP" name="LOOP" bit="1">Makes infinite loop. Can be toggled via targetname.</flag>
<flag key="BROADCAST" name="BROADCAST" bit="2">Makes sound global, sound volume is maximal everywhere on map. Doesn&apos;t work with LOOPs.</flag>
<flag key="ACTIVATOR_SPEAKER" name="ACTIVATOR_SPEAKER" bit="3">Plays sound only for person who activated it.</flag>
------ PROPERTIES ------
<sound key="noise" name="noise" value="NOSOUND">Path/name of .wav or .ogg file. (string (sound), eg: sound/noise.wav, def: NOSOUND)</sound>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<targetname key="targetname" name="targetname">Can possibly be fired. (string (targetname))</targetname>
<string key="wait" name="wait">With nonzero variance part continuously starts sounds in parallel with delay defined by &quot;wait&quot;. Otherwise makes no effect. Ignores LOOP flag. (time_2float (time [variance]))</string>
</point>

<group name="_decal" color="0 1 0">
------ DESCRIPTION ------
[q3map]-only entity that specifies a decal to be projected. Should contain 1 or more patch meshes (curves) and target an pos_target entity. The distance between the center of the _decal entity and the target is the axis and distance of projection.

------ PROPERTIES ------
<target key="target" name="target">Projection direction, pos_target. (string (target))</target>
</group>

<point name="_skybox" color="0.267 0.267 1" box="-8 -8 -8 8 8 8">
------ DESCRIPTION ------
[q3map]-only entity. Used to make skybox with additional geometry (portal sky).
Place this entity into isolated box.
More info: http://en.wikibooks.org/wiki/Q3Map2#skybox_tutorial
------ PROPERTIES ------
<angle key="angle" name="angle">[q3map] Short version of &quot;angles&quot;. (float (yaw))</angle>
<real3 key="origin" name="origin">Position. (vec3_float)</real3>
<real3 key="_scale" name="_scale" value="64 64 64">[q3map] Scale skybox geometry. Can be vec3_float or just float (x=y=z=value). (vec3_float, def: 64 64 64)</real3>
<angles key="angles" name="angles">[q3map] Skybox geometry orientation. (vec3_float (yaw pitch roll))</angles>
</point>

</classes>
